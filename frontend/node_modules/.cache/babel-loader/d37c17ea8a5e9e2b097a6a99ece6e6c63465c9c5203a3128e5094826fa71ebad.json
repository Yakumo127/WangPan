{"ast":null,"code":"import { ref, reactive, onMounted, computed } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { Share, Refresh, Search, Document, Folder, CopyDocument, Edit, Delete, View, Link, Download } from '@element-plus/icons-vue';\nexport default {\n  __name: 'Share',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loading = ref(false);\n    const creating = ref(false);\n    const shares = ref([]);\n    const searchKeyword = ref('');\n    const showShareDialog = ref(false);\n    const availableItems = ref([]);\n    const shareForm = reactive({\n      type: 'file',\n      itemId: '',\n      expireType: 'never',\n      expireTime: null,\n      requireCode: false\n    });\n    const shareStats = ref({\n      totalShares: 0,\n      activeShares: 0,\n      totalDownloads: 0,\n      totalViews: 0\n    });\n\n    // 格式化文件大小\n    const formatFileSize = bytes => {\n      if (!bytes) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    };\n\n    // 格式化日期时间\n    const formatDateTime = datetime => {\n      if (!datetime) return '';\n      return new Date(datetime).toLocaleString();\n    };\n\n    // 检查是否过期\n    const isExpired = expireTime => {\n      return new Date(expireTime) < new Date();\n    };\n\n    // 获取分享状态\n    const getShareStatus = share => {\n      if (share.expireTime && isExpired(share.expireTime)) {\n        return '已过期';\n      }\n      return share.active ? '有效' : '已取消';\n    };\n\n    // 获取分享状态类型\n    const getShareStatusType = share => {\n      if (share.expireTime && isExpired(share.expireTime)) {\n        return 'danger';\n      }\n      return share.active ? 'success' : 'info';\n    };\n\n    // 禁用过去的日期\n    const disabledDate = time => {\n      return time.getTime() < Date.now();\n    };\n\n    // 加载分享列表\n    const loadShares = async () => {\n      loading.value = true;\n      try {\n        // 模拟数据，实际应该从API获取\n        shares.value = [{\n          id: 1,\n          name: '项目文档.pdf',\n          type: 'file',\n          size: 2048576,\n          shareUrl: 'https://example.com/share/abc123',\n          createTime: '2024-01-15T10:30:00',\n          expireTime: '2024-02-15T10:30:00',\n          viewCount: 25,\n          downloadCount: 8,\n          active: true\n        }, {\n          id: 2,\n          name: '设计素材',\n          type: 'folder',\n          size: 10485760,\n          shareUrl: 'https://example.com/share/def456',\n          createTime: '2024-01-10T14:20:00',\n          expireTime: null,\n          viewCount: 15,\n          downloadCount: 3,\n          active: true\n        }];\n\n        // 更新统计信息\n        shareStats.value = {\n          totalShares: shares.value.length,\n          activeShares: shares.value.filter(s => s.active).length,\n          totalDownloads: shares.value.reduce((sum, s) => sum + (s.downloadCount || 0), 0),\n          totalViews: shares.value.reduce((sum, s) => sum + (s.viewCount || 0), 0)\n        };\n      } catch (error) {\n        ElMessage.error('加载分享列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 加载可选项目\n    const loadAvailableItems = async () => {\n      try {\n        // 模拟数据，实际应该从API获取\n        availableItems.value = [{\n          id: 1,\n          name: '项目文档.pdf',\n          type: 'file',\n          size: 2048576\n        }, {\n          id: 2,\n          name: '设计素材',\n          type: 'folder',\n          size: 10485760\n        }, {\n          id: 3,\n          name: '会议记录.docx',\n          type: 'file',\n          size: 512000\n        }, {\n          id: 4,\n          name: '图片资源',\n          type: 'folder',\n          size: 5242880\n        }];\n      } catch (error) {\n        console.error('加载可选项目失败:', error);\n      }\n    };\n\n    // 刷新分享列表\n    const refreshShares = () => {\n      loadShares();\n    };\n\n    // 搜索分享\n    const searchShares = () => {\n      ElMessage.info('分享搜索功能开发中...');\n    };\n\n    // 复制分享链接\n    const copyShareLink = async share => {\n      try {\n        await navigator.clipboard.writeText(share.shareUrl);\n        ElMessage.success('分享链接已复制到剪贴板');\n      } catch (error) {\n        ElMessage.error('复制分享链接失败');\n      }\n    };\n\n    // 查看分享\n    const viewShare = share => {\n      window.open(share.shareUrl, '_blank');\n    };\n\n    // 编辑分享\n    const editShare = share => {\n      ElMessage.info('编辑分享功能开发中...');\n    };\n\n    // 删除分享\n    const deleteShare = async share => {\n      try {\n        await ElMessageBox.confirm(`确定要取消分享 \"${share.name}\" 吗？`, '取消分享', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n\n        // 模拟删除操作\n        share.active = false;\n        ElMessage.success('分享已取消');\n        await loadShares();\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('取消分享失败');\n        }\n      }\n    };\n\n    // 创建分享\n    const createShareFunc = async () => {\n      if (!shareForm.itemId) {\n        ElMessage.warning('请选择要分享的文件或文件夹');\n        return;\n      }\n      creating.value = true;\n      try {\n        // 模拟创建分享\n        const newItem = availableItems.value.find(item => item.id === shareForm.itemId);\n        const newShare = {\n          id: shares.value.length + 1,\n          name: newItem.name,\n          type: shareForm.type,\n          size: newItem.size,\n          shareUrl: `https://example.com/share/${Math.random().toString(36).substr(2, 9)}`,\n          createTime: new Date().toISOString(),\n          expireTime: shareForm.expireType === 'custom' ? shareForm.expireTime.toISOString() : null,\n          viewCount: 0,\n          downloadCount: 0,\n          active: true\n        };\n        shares.value.unshift(newShare);\n        ElMessage.success('分享创建成功');\n        showShareDialog.value = false;\n\n        // 重置表单\n        shareForm.itemId = '';\n        shareForm.expireType = 'never';\n        shareForm.expireTime = null;\n        shareForm.requireCode = false;\n        await loadShares();\n      } catch (error) {\n        ElMessage.error('创建分享失败');\n      } finally {\n        creating.value = false;\n      }\n    };\n    onMounted(() => {\n      loadShares();\n      loadAvailableItems();\n    });\n    const __returned__ = {\n      loading,\n      creating,\n      shares,\n      searchKeyword,\n      showShareDialog,\n      availableItems,\n      shareForm,\n      shareStats,\n      formatFileSize,\n      formatDateTime,\n      isExpired,\n      getShareStatus,\n      getShareStatusType,\n      disabledDate,\n      loadShares,\n      loadAvailableItems,\n      refreshShares,\n      searchShares,\n      copyShareLink,\n      viewShare,\n      editShare,\n      deleteShare,\n      createShareFunc,\n      ref,\n      reactive,\n      onMounted,\n      computed,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get Share() {\n        return Share;\n      },\n      get Refresh() {\n        return Refresh;\n      },\n      get Search() {\n        return Search;\n      },\n      get Document() {\n        return Document;\n      },\n      get Folder() {\n        return Folder;\n      },\n      get CopyDocument() {\n        return CopyDocument;\n      },\n      get Edit() {\n        return Edit;\n      },\n      get Delete() {\n        return Delete;\n      },\n      get View() {\n        return View;\n      },\n      get Link() {\n        return Link;\n      },\n      get Download() {\n        return Download;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","ElMessage","ElMessageBox","Share","Refresh","Search","Document","Folder","CopyDocument","Edit","Delete","View","Link","Download","loading","creating","shares","searchKeyword","showShareDialog","availableItems","shareForm","type","itemId","expireType","expireTime","requireCode","shareStats","totalShares","activeShares","totalDownloads","totalViews","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDateTime","datetime","Date","toLocaleString","isExpired","getShareStatus","share","active","getShareStatusType","disabledDate","time","getTime","now","loadShares","value","id","name","size","shareUrl","createTime","viewCount","downloadCount","length","filter","s","reduce","sum","error","loadAvailableItems","console","refreshShares","searchShares","info","copyShareLink","navigator","clipboard","writeText","success","viewShare","window","open","editShare","deleteShare","confirm","confirmButtonText","cancelButtonText","createShareFunc","warning","newItem","find","item","newShare","random","toString","substr","toISOString","unshift"],"sources":["/workspace/frontend/src/views/Share.vue"],"sourcesContent":["<template>\n  <div class=\"share-container\">\n    <!-- 工具栏 -->\n    <div class=\"toolbar\">\n      <div class=\"toolbar-left\">\n        <el-button type=\"primary\" @click=\"showShareDialog = true\">\n          <el-icon><Share /></el-icon>\n          创建分享\n        </el-button>\n        <el-button @click=\"refreshShares\" :loading=\"loading\">\n          <el-icon><Refresh /></el-icon>\n          刷新\n        </el-button>\n      </div>\n      \n      <div class=\"toolbar-right\">\n        <el-input\n          v-model=\"searchKeyword\"\n          placeholder=\"搜索分享...\"\n          style=\"width: 200px\"\n          clearable\n          @keyup.enter=\"searchShares\"\n        >\n          <template #prefix>\n            <el-icon><Search /></el-icon>\n          </template>\n        </el-input>\n        <el-button @click=\"searchShares\">搜索</el-button>\n      </div>\n    </div>\n\n    <!-- 分享统计 -->\n    <div class=\"stats-row\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <el-icon><Share /></el-icon>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-number\">{{ shareStats.totalShares || 0 }}</div>\n              <div class=\"stat-label\">总分享数</div>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <el-icon><Link /></el-icon>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-number\">{{ shareStats.activeShares || 0 }}</div>\n              <div class=\"stat-label\">有效分享</div>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <el-icon><Download /></el-icon>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-number\">{{ shareStats.totalDownloads || 0 }}</div>\n              <div class=\"stat-label\">总下载次数</div>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <el-icon><View /></el-icon>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-number\">{{ shareStats.totalViews || 0 }}</div>\n              <div class=\"stat-label\">总浏览次数</div>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n\n    <!-- 分享列表 -->\n    <div class=\"share-list\">\n      <el-table\n        :data=\"shares\"\n        style=\"width: 100%\"\n        v-loading=\"loading\"\n      >\n        <el-table-column label=\"文件信息\" min-width=\"300\">\n          <template #default=\"{ row }\">\n            <div class=\"share-info\">\n              <el-icon class=\"share-icon\">\n                <Document v-if=\"row.type === 'file'\" />\n                <Folder v-else />\n              </el-icon>\n              <div class=\"share-details\">\n                <div class=\"share-name\">{{ row.name }}</div>\n                <div class=\"share-meta\">\n                  <el-tag size=\"small\" :type=\"row.type === 'file' ? 'primary' : 'success'\">\n                    {{ row.type === 'file' ? '文件' : '文件夹' }}\n                  </el-tag>\n                  <span class=\"share-size\">{{ formatFileSize(row.size) }}</span>\n                </div>\n              </div>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"分享链接\" min-width=\"200\">\n          <template #default=\"{ row }\">\n            <div class=\"share-link\">\n              <el-input\n                v-model=\"row.shareUrl\"\n                readonly\n                size=\"small\"\n                :style=\"{ width: '100%' }\"\n              >\n                <template #append>\n                  <el-button @click=\"copyShareLink(row)\" size=\"small\">\n                    <el-icon><CopyDocument /></el-icon>\n                  </el-button>\n                </template>\n              </el-input>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\">\n          <template #default=\"{ row }\">\n            {{ formatDateTime(row.createTime) }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"expireTime\" label=\"过期时间\" width=\"180\">\n          <template #default=\"{ row }\">\n            <span v-if=\"row.expireTime\" :class=\"{ 'expired': isExpired(row.expireTime) }\">\n              {{ formatDateTime(row.expireTime) }}\n            </span>\n            <span v-else class=\"no-expire\">永久有效</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"统计\" width=\"120\">\n          <template #default=\"{ row }\">\n            <div class=\"share-stats\">\n              <div class=\"stat-item\">\n                <el-icon><View /></el-icon>\n                {{ row.viewCount || 0 }}\n              </div>\n              <div class=\"stat-item\">\n                <el-icon><Download /></el-icon>\n                {{ row.downloadCount || 0 }}\n              </div>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"状态\" width=\"100\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"getShareStatusType(row)\">\n              {{ getShareStatus(row) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"200\">\n          <template #default=\"{ row }\">\n            <el-button-group>\n              <el-button size=\"small\" @click=\"viewShare(row)\">\n                <el-icon><View /></el-icon>\n                查看\n              </el-button>\n              <el-button size=\"small\" @click=\"editShare(row)\">\n                <el-icon><Edit /></el-icon>\n                编辑\n              </el-button>\n              <el-button size=\"small\" type=\"danger\" @click=\"deleteShare(row)\">\n                <el-icon><Delete /></el-icon>\n                取消\n              </el-button>\n            </el-button-group>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 创建分享对话框 -->\n    <el-dialog v-model=\"showShareDialog\" title=\"创建分享\" width=\"600px\">\n      <el-form :model=\"shareForm\" label-width=\"100px\">\n        <el-form-item label=\"选择类型\">\n          <el-radio-group v-model=\"shareForm.type\">\n            <el-radio label=\"file\">文件</el-radio>\n            <el-radio label=\"folder\">文件夹</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        \n        <el-form-item :label=\"shareForm.type === 'file' ? '选择文件' : '选择文件夹'\">\n          <el-select\n            v-model=\"shareForm.itemId\"\n            :placeholder=\"`请选择${shareForm.type === 'file' ? '文件' : '文件夹'}`\"\n            style=\"width: 100%\"\n            filterable\n          >\n            <el-option\n              v-for=\"item in availableItems\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            >\n              <div class=\"option-item\">\n                <el-icon>\n                  <Document v-if=\"shareForm.type === 'file'\" />\n                  <Folder v-else />\n                </el-icon>\n                <span>{{ item.name }}</span>\n                <span class=\"item-size\">{{ formatFileSize(item.size) }}</span>\n              </div>\n            </el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"过期时间\">\n          <el-radio-group v-model=\"shareForm.expireType\">\n            <el-radio label=\"never\">永久有效</el-radio>\n            <el-radio label=\"custom\">自定义时间</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        \n        <el-form-item v-if=\"shareForm.expireType === 'custom'\" label=\"选择时间\">\n          <el-date-picker\n            v-model=\"shareForm.expireTime\"\n            type=\"datetime\"\n            placeholder=\"选择过期时间\"\n            :disabled-date=\"disabledDate\"\n            style=\"width: 100%\"\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"提取码\">\n          <el-switch\n            v-model=\"shareForm.requireCode\"\n            active-text=\"需要提取码\"\n            inactive-text=\"不需要提取码\"\n          />\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <el-button @click=\"showShareDialog = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"createShareFunc\" :loading=\"creating\">\n          创建分享\n        </el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, computed } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { Share, Refresh, Search, Document, Folder, CopyDocument, Edit, Delete, View, Link, Download } from '@element-plus/icons-vue'\n\nconst loading = ref(false)\nconst creating = ref(false)\nconst shares = ref([])\nconst searchKeyword = ref('')\nconst showShareDialog = ref(false)\nconst availableItems = ref([])\n\nconst shareForm = reactive({\n  type: 'file',\n  itemId: '',\n  expireType: 'never',\n  expireTime: null,\n  requireCode: false\n})\n\nconst shareStats = ref({\n  totalShares: 0,\n  activeShares: 0,\n  totalDownloads: 0,\n  totalViews: 0\n})\n\n// 格式化文件大小\nconst formatFileSize = (bytes) => {\n  if (!bytes) return '0 B'\n  const k = 1024\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n// 格式化日期时间\nconst formatDateTime = (datetime) => {\n  if (!datetime) return ''\n  return new Date(datetime).toLocaleString()\n}\n\n// 检查是否过期\nconst isExpired = (expireTime) => {\n  return new Date(expireTime) < new Date()\n}\n\n// 获取分享状态\nconst getShareStatus = (share) => {\n  if (share.expireTime && isExpired(share.expireTime)) {\n    return '已过期'\n  }\n  return share.active ? '有效' : '已取消'\n}\n\n// 获取分享状态类型\nconst getShareStatusType = (share) => {\n  if (share.expireTime && isExpired(share.expireTime)) {\n    return 'danger'\n  }\n  return share.active ? 'success' : 'info'\n}\n\n// 禁用过去的日期\nconst disabledDate = (time) => {\n  return time.getTime() < Date.now()\n}\n\n// 加载分享列表\nconst loadShares = async () => {\n  loading.value = true\n  try {\n    // 模拟数据，实际应该从API获取\n    shares.value = [\n      {\n        id: 1,\n        name: '项目文档.pdf',\n        type: 'file',\n        size: 2048576,\n        shareUrl: 'https://example.com/share/abc123',\n        createTime: '2024-01-15T10:30:00',\n        expireTime: '2024-02-15T10:30:00',\n        viewCount: 25,\n        downloadCount: 8,\n        active: true\n      },\n      {\n        id: 2,\n        name: '设计素材',\n        type: 'folder',\n        size: 10485760,\n        shareUrl: 'https://example.com/share/def456',\n        createTime: '2024-01-10T14:20:00',\n        expireTime: null,\n        viewCount: 15,\n        downloadCount: 3,\n        active: true\n      }\n    ]\n    \n    // 更新统计信息\n    shareStats.value = {\n      totalShares: shares.value.length,\n      activeShares: shares.value.filter(s => s.active).length,\n      totalDownloads: shares.value.reduce((sum, s) => sum + (s.downloadCount || 0), 0),\n      totalViews: shares.value.reduce((sum, s) => sum + (s.viewCount || 0), 0)\n    }\n  } catch (error) {\n    ElMessage.error('加载分享列表失败')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 加载可选项目\nconst loadAvailableItems = async () => {\n  try {\n    // 模拟数据，实际应该从API获取\n    availableItems.value = [\n      { id: 1, name: '项目文档.pdf', type: 'file', size: 2048576 },\n      { id: 2, name: '设计素材', type: 'folder', size: 10485760 },\n      { id: 3, name: '会议记录.docx', type: 'file', size: 512000 },\n      { id: 4, name: '图片资源', type: 'folder', size: 5242880 }\n    ]\n  } catch (error) {\n    console.error('加载可选项目失败:', error)\n  }\n}\n\n// 刷新分享列表\nconst refreshShares = () => {\n  loadShares()\n}\n\n// 搜索分享\nconst searchShares = () => {\n  ElMessage.info('分享搜索功能开发中...')\n}\n\n// 复制分享链接\nconst copyShareLink = async (share) => {\n  try {\n    await navigator.clipboard.writeText(share.shareUrl)\n    ElMessage.success('分享链接已复制到剪贴板')\n  } catch (error) {\n    ElMessage.error('复制分享链接失败')\n  }\n}\n\n// 查看分享\nconst viewShare = (share) => {\n  window.open(share.shareUrl, '_blank')\n}\n\n// 编辑分享\nconst editShare = (share) => {\n  ElMessage.info('编辑分享功能开发中...')\n}\n\n// 删除分享\nconst deleteShare = async (share) => {\n  try {\n    await ElMessageBox.confirm(\n      `确定要取消分享 \"${share.name}\" 吗？`,\n      '取消分享',\n      {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }\n    )\n    \n    // 模拟删除操作\n    share.active = false\n    ElMessage.success('分享已取消')\n    await loadShares()\n  } catch (error) {\n    if (error !== 'cancel') {\n      ElMessage.error('取消分享失败')\n    }\n  }\n}\n\n// 创建分享\nconst createShareFunc = async () => {\n  if (!shareForm.itemId) {\n    ElMessage.warning('请选择要分享的文件或文件夹')\n    return\n  }\n\n  creating.value = true\n  try {\n    // 模拟创建分享\n    const newItem = availableItems.value.find(item => item.id === shareForm.itemId)\n    const newShare = {\n      id: shares.value.length + 1,\n      name: newItem.name,\n      type: shareForm.type,\n      size: newItem.size,\n      shareUrl: `https://example.com/share/${Math.random().toString(36).substr(2, 9)}`,\n      createTime: new Date().toISOString(),\n      expireTime: shareForm.expireType === 'custom' ? shareForm.expireTime.toISOString() : null,\n      viewCount: 0,\n      downloadCount: 0,\n      active: true\n    }\n    \n    shares.value.unshift(newShare)\n    \n    ElMessage.success('分享创建成功')\n    showShareDialog.value = false\n    \n    // 重置表单\n    shareForm.itemId = ''\n    shareForm.expireType = 'never'\n    shareForm.expireTime = null\n    shareForm.requireCode = false\n    \n    await loadShares()\n  } catch (error) {\n    ElMessage.error('创建分享失败')\n  } finally {\n    creating.value = false\n  }\n}\n\nonMounted(() => {\n  loadShares()\n  loadAvailableItems()\n})\n</script>\n\n<style scoped>\n.share-container {\n  padding: 20px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.toolbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 15px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.toolbar-left {\n  display: flex;\n  gap: 10px;\n}\n\n.toolbar-right {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.stats-row {\n  margin-bottom: 20px;\n}\n\n.stat-card {\n  text-align: center;\n  padding: 20px;\n}\n\n.stat-icon {\n  font-size: 32px;\n  color: #409EFF;\n  margin-bottom: 10px;\n}\n\n.stat-number {\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 5px;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #666;\n}\n\n.share-list {\n  flex: 1;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  overflow: hidden;\n}\n\n.share-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.share-icon {\n  font-size: 18px;\n  color: #409EFF;\n}\n\n.share-details {\n  flex: 1;\n}\n\n.share-name {\n  font-weight: 500;\n  margin-bottom: 4px;\n}\n\n.share-meta {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.share-size {\n  font-size: 12px;\n  color: #666;\n}\n\n.share-stats {\n  display: flex;\n  gap: 8px;\n}\n\n.stat-item {\n  display: flex;\n  align-items: center;\n  gap: 2px;\n  font-size: 12px;\n  color: #666;\n}\n\n.expired {\n  color: #f56c6c;\n  font-weight: bold;\n}\n\n.no-expire {\n  color: #67c23a;\n  font-weight: bold;\n}\n\n.option-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.item-size {\n  margin-left: auto;\n  font-size: 12px;\n  color: #666;\n}\n\n:deep(.el-table) {\n  height: 100%;\n}\n\n:deep(.el-table__body-wrapper) {\n  overflow-y: auto;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
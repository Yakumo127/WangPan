{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withKeys as _withKeys, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"login-box\"\n};\nconst _hoisted_3 = {\n  class: \"login-header\"\n};\nconst _hoisted_4 = {\n  class: \"mode-switch\"\n};\nimport { ref, reactive, onMounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useAuthStore } from '@/store/auth';\nexport default {\n  __name: 'Login',\n  setup(__props) {\n    const router = useRouter();\n    const route = useRoute();\n    const authStore = useAuthStore();\n\n    // 表单引用\n    const loginFormRef = ref();\n    const registerFormRef = ref();\n\n    // 状态管理\n    const loading = ref(false);\n    const isLogin = ref(true); // true为登录模式，false为注册模式\n\n    // 登录表单数据\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    });\n\n    // 注册表单数据\n    const registerForm = reactive({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n\n    // 登录验证规则\n    const loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 20,\n        message: '用户名长度在3-20个字符',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        max: 20,\n        message: '密码长度在6-20个字符',\n        trigger: 'blur'\n      }]\n    };\n\n    // 注册验证规则\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能小于6位'));\n      } else {\n        if (registerForm.confirmPassword !== '') {\n          registerFormRef.value?.validateField('confirmPassword');\n        }\n        callback();\n      }\n    };\n    const validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== registerForm.password) {\n        callback(new Error('两次输入密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    const registerRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 20,\n        message: '用户名长度在3-20个字符',\n        trigger: 'blur'\n      }],\n      email: [{\n        required: true,\n        message: '请输入邮箱',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入正确的邮箱格式',\n        trigger: 'blur'\n      }],\n      password: [{\n        validator: validatePass,\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        validator: validatePass2,\n        trigger: 'blur'\n      }]\n    };\n\n    // 切换登录/注册模式\n    const switchMode = loginMode => {\n      isLogin.value = loginMode;\n      // 清空表单验证状态\n      if (loginFormRef.value) {\n        loginFormRef.value.clearValidate();\n      }\n      if (registerFormRef.value) {\n        registerFormRef.value.clearValidate();\n      }\n    };\n\n    // 处理登录\n    const handleLogin = async () => {\n      if (!loginFormRef.value) return;\n      await loginFormRef.value.validate(async valid => {\n        if (valid) {\n          loading.value = true;\n          try {\n            await authStore.handleLogin(loginForm);\n            ElMessage.success('登录成功');\n            router.push('/');\n          } catch (error) {\n            ElMessage.error(error.message || '登录失败');\n          } finally {\n            loading.value = false;\n          }\n        }\n      });\n    };\n\n    // 处理注册\n    const handleRegister = async () => {\n      if (!registerFormRef.value) return;\n      await registerFormRef.value.validate(async valid => {\n        if (valid) {\n          loading.value = true;\n          try {\n            await authStore.handleRegister({\n              username: registerForm.username,\n              email: registerForm.email,\n              password: registerForm.password,\n              confirmPassword: registerForm.confirmPassword\n            });\n            ElMessage.success('注册成功');\n            // 注册成功后切换到登录模式\n            isLogin.value = true;\n            // 清空注册表单\n            registerForm.username = '';\n            registerForm.email = '';\n            registerForm.password = '';\n            registerForm.confirmPassword = '';\n          } catch (error) {\n            ElMessage.error(error.message || '注册失败');\n          } finally {\n            loading.value = false;\n          }\n        }\n      });\n    };\n\n    // 组件挂载时检查URL参数\n    onMounted(() => {\n      // 如果URL中有mode=register参数，默认显示注册表单\n      if (route.query.mode === 'register') {\n        isLogin.value = false;\n      }\n    });\n    return (_ctx, _cache) => {\n      const _component_el_button = _resolveComponent(\"el-button\");\n      const _component_el_input = _resolveComponent(\"el-input\");\n      const _component_el_form_item = _resolveComponent(\"el-form-item\");\n      const _component_el_form = _resolveComponent(\"el-form\");\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[10] || (_cache[10] = _createElementVNode(\"h1\", null, \"企业文件管理系统\", -1)), _cache[11] || (_cache[11] = _createElementVNode(\"p\", null, \"安全、高效的企业级文件管理平台\", -1)), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n        type: isLogin.value ? 'primary' : 'default',\n        size: \"large\",\n        onClick: _cache[0] || (_cache[0] = $event => switchMode(true))\n      }, {\n        default: _withCtx(() => [...(_cache[8] || (_cache[8] = [_createTextVNode(\" 登录 \", -1)]))]),\n        _: 1\n      }, 8, [\"type\"]), _createVNode(_component_el_button, {\n        type: !isLogin.value ? 'primary' : 'default',\n        size: \"large\",\n        onClick: _cache[1] || (_cache[1] = $event => switchMode(false))\n      }, {\n        default: _withCtx(() => [...(_cache[9] || (_cache[9] = [_createTextVNode(\" 注册 \", -1)]))]),\n        _: 1\n      }, 8, [\"type\"])])]), isLogin.value ? (_openBlock(), _createBlock(_component_el_form, {\n        key: 0,\n        ref_key: \"loginFormRef\",\n        ref: loginFormRef,\n        model: loginForm,\n        rules: loginRules,\n        class: \"login-form\",\n        onSubmit: _withModifiers(handleLogin, [\"prevent\"])\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          prop: \"username\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: loginForm.username,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => loginForm.username = $event),\n            placeholder: \"请输入用户名\",\n            size: \"large\",\n            \"prefix-icon\": \"User\",\n            clearable: \"\"\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_el_form_item, {\n          prop: \"password\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: loginForm.password,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => loginForm.password = $event),\n            type: \"password\",\n            placeholder: \"请输入密码\",\n            size: \"large\",\n            \"prefix-icon\": \"Lock\",\n            \"show-password\": \"\",\n            onKeyup: _withKeys(handleLogin, [\"enter\"])\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            size: \"large\",\n            style: {\n              \"width\": \"100%\"\n            },\n            loading: loading.value,\n            onClick: handleLogin\n          }, {\n            default: _withCtx(() => [...(_cache[12] || (_cache[12] = [_createTextVNode(\" 登录 \", -1)]))]),\n            _: 1\n          }, 8, [\"loading\"])]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"model\"])) : (_openBlock(), _createBlock(_component_el_form, {\n        key: 1,\n        ref_key: \"registerFormRef\",\n        ref: registerFormRef,\n        model: registerForm,\n        rules: registerRules,\n        class: \"login-form\",\n        onSubmit: _withModifiers(handleRegister, [\"prevent\"])\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          prop: \"username\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: registerForm.username,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => registerForm.username = $event),\n            placeholder: \"请输入用户名\",\n            size: \"large\",\n            \"prefix-icon\": \"User\",\n            clearable: \"\"\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_el_form_item, {\n          prop: \"email\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: registerForm.email,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => registerForm.email = $event),\n            placeholder: \"请输入邮箱\",\n            size: \"large\",\n            \"prefix-icon\": \"Message\",\n            clearable: \"\"\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_el_form_item, {\n          prop: \"password\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: registerForm.password,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => registerForm.password = $event),\n            type: \"password\",\n            placeholder: \"请输入密码\",\n            size: \"large\",\n            \"prefix-icon\": \"Lock\",\n            \"show-password\": \"\"\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_el_form_item, {\n          prop: \"confirmPassword\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: registerForm.confirmPassword,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => registerForm.confirmPassword = $event),\n            type: \"password\",\n            placeholder: \"请确认密码\",\n            size: \"large\",\n            \"prefix-icon\": \"Lock\",\n            \"show-password\": \"\",\n            onKeyup: _withKeys(handleRegister, [\"enter\"])\n          }, null, 8, [\"modelValue\"])]),\n          _: 1\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            size: \"large\",\n            style: {\n              \"width\": \"100%\"\n            },\n            loading: loading.value,\n            onClick: handleRegister\n          }, {\n            default: _withCtx(() => [...(_cache[13] || (_cache[13] = [_createTextVNode(\" 注册 \", -1)]))]),\n            _: 1\n          }, 8, [\"loading\"])]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"model\"]))])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","useRouter","useRoute","ElMessage","useAuthStore","router","route","authStore","loginFormRef","registerFormRef","loading","isLogin","loginForm","username","password","registerForm","email","confirmPassword","loginRules","required","message","trigger","min","max","validatePass","rule","value","callback","Error","length","validateField","validatePass2","registerRules","type","validator","switchMode","loginMode","clearValidate","handleLogin","validate","valid","success","push","error","handleRegister","query","mode","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_el_button","size","onClick","_cache","$event","_createBlock","_component_el_form","model","rules","class","onSubmit","_withModifiers","_component_el_form_item","prop","_component_el_input","placeholder","clearable","onKeyup","_withKeys","style"],"sources":["/workspace/frontend/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <div class=\"login-header\">\n        <h1>企业文件管理系统</h1>\n        <p>安全、高效的企业级文件管理平台</p>\n        \n        <!-- 切换按钮 -->\n        <div class=\"mode-switch\">\n          <el-button\n            :type=\"isLogin ? 'primary' : 'default'\"\n            size=\"large\"\n            @click=\"switchMode(true)\"\n          >\n            登录\n          </el-button>\n          <el-button\n            :type=\"!isLogin ? 'primary' : 'default'\"\n            size=\"large\"\n            @click=\"switchMode(false)\"\n          >\n            注册\n          </el-button>\n        </div>\n      </div>\n      \n      <!-- 登录表单 -->\n      <el-form\n        v-if=\"isLogin\"\n        ref=\"loginFormRef\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        class=\"login-form\"\n        @submit.prevent=\"handleLogin\"\n      >\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"请输入用户名\"\n            size=\"large\"\n            prefix-icon=\"User\"\n            clearable\n          />\n        </el-form-item>\n        \n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            size=\"large\"\n            prefix-icon=\"Lock\"\n            show-password\n            @keyup.enter=\"handleLogin\"\n          />\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            size=\"large\"\n            style=\"width: 100%\"\n            :loading=\"loading\"\n            @click=\"handleLogin\"\n          >\n            登录\n          </el-button>\n        </el-form-item>\n      </el-form>\n      \n      <!-- 注册表单 -->\n      <el-form\n        v-else\n        ref=\"registerFormRef\"\n        :model=\"registerForm\"\n        :rules=\"registerRules\"\n        class=\"login-form\"\n        @submit.prevent=\"handleRegister\"\n      >\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"registerForm.username\"\n            placeholder=\"请输入用户名\"\n            size=\"large\"\n            prefix-icon=\"User\"\n            clearable\n          />\n        </el-form-item>\n        \n        <el-form-item prop=\"email\">\n          <el-input\n            v-model=\"registerForm.email\"\n            placeholder=\"请输入邮箱\"\n            size=\"large\"\n            prefix-icon=\"Message\"\n            clearable\n          />\n        </el-form-item>\n        \n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"registerForm.password\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            size=\"large\"\n            prefix-icon=\"Lock\"\n            show-password\n          />\n        </el-form-item>\n        \n        <el-form-item prop=\"confirmPassword\">\n          <el-input\n            v-model=\"registerForm.confirmPassword\"\n            type=\"password\"\n            placeholder=\"请确认密码\"\n            size=\"large\"\n            prefix-icon=\"Lock\"\n            show-password\n            @keyup.enter=\"handleRegister\"\n          />\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            size=\"large\"\n            style=\"width: 100%\"\n            :loading=\"loading\"\n            @click=\"handleRegister\"\n          >\n            注册\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { useAuthStore } from '@/store/auth'\n\nconst router = useRouter()\nconst route = useRoute()\nconst authStore = useAuthStore()\n\n// 表单引用\nconst loginFormRef = ref()\nconst registerFormRef = ref()\n\n// 状态管理\nconst loading = ref(false)\nconst isLogin = ref(true) // true为登录模式，false为注册模式\n\n// 登录表单数据\nconst loginForm = reactive({\n  username: '',\n  password: ''\n})\n\n// 注册表单数据\nconst registerForm = reactive({\n  username: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n})\n\n// 登录验证规则\nconst loginRules = {\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' },\n    { min: 3, max: 20, message: '用户名长度在3-20个字符', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入密码', trigger: 'blur' },\n    { min: 6, max: 20, message: '密码长度在6-20个字符', trigger: 'blur' }\n  ]\n}\n\n// 注册验证规则\nconst validatePass = (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('请输入密码'))\n  } else if (value.length < 6) {\n    callback(new Error('密码长度不能小于6位'))\n  } else {\n    if (registerForm.confirmPassword !== '') {\n      registerFormRef.value?.validateField('confirmPassword')\n    }\n    callback()\n  }\n}\n\nconst validatePass2 = (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('请再次输入密码'))\n  } else if (value !== registerForm.password) {\n    callback(new Error('两次输入密码不一致'))\n  } else {\n    callback()\n  }\n}\n\nconst registerRules = {\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' },\n    { min: 3, max: 20, message: '用户名长度在3-20个字符', trigger: 'blur' }\n  ],\n  email: [\n    { required: true, message: '请输入邮箱', trigger: 'blur' },\n    { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n  ],\n  password: [\n    { validator: validatePass, trigger: 'blur' }\n  ],\n  confirmPassword: [\n    { validator: validatePass2, trigger: 'blur' }\n  ]\n}\n\n// 切换登录/注册模式\nconst switchMode = (loginMode) => {\n  isLogin.value = loginMode\n  // 清空表单验证状态\n  if (loginFormRef.value) {\n    loginFormRef.value.clearValidate()\n  }\n  if (registerFormRef.value) {\n    registerFormRef.value.clearValidate()\n  }\n}\n\n// 处理登录\nconst handleLogin = async () => {\n  if (!loginFormRef.value) return\n  \n  await loginFormRef.value.validate(async (valid) => {\n    if (valid) {\n      loading.value = true\n      try {\n        await authStore.handleLogin(loginForm)\n        ElMessage.success('登录成功')\n        router.push('/')\n      } catch (error) {\n        ElMessage.error(error.message || '登录失败')\n      } finally {\n        loading.value = false\n      }\n    }\n  })\n}\n\n// 处理注册\nconst handleRegister = async () => {\n  if (!registerFormRef.value) return\n  \n  await registerFormRef.value.validate(async (valid) => {\n    if (valid) {\n      loading.value = true\n      try {\n        await authStore.handleRegister({\n          username: registerForm.username,\n          email: registerForm.email,\n          password: registerForm.password,\n          confirmPassword: registerForm.confirmPassword\n        })\n        ElMessage.success('注册成功')\n        // 注册成功后切换到登录模式\n        isLogin.value = true\n        // 清空注册表单\n        registerForm.username = ''\n        registerForm.email = ''\n        registerForm.password = ''\n        registerForm.confirmPassword = ''\n      } catch (error) {\n        ElMessage.error(error.message || '注册失败')\n      } finally {\n        loading.value = false\n      }\n    }\n  })\n}\n\n// 组件挂载时检查URL参数\nonMounted(() => {\n  // 如果URL中有mode=register参数，默认显示注册表单\n  if (route.query.mode === 'register') {\n    isLogin.value = false\n  }\n})\n\n</script>\n\n<style scoped>\n.login-container {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 20px;\n}\n\n.login-box {\n  width: 100%;\n  max-width: 400px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-radius: 20px;\n  padding: 40px;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.login-header h1 {\n  color: #2c3e50;\n  font-size: 28px;\n  font-weight: 600;\n  margin-bottom: 10px;\n}\n\n.login-header p {\n  color: #7f8c8d;\n  font-size: 14px;\n  margin-bottom: 20px;\n}\n\n.mode-switch {\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n}\n\n.mode-switch .el-button {\n  min-width: 100px;\n}\n\n.login-form {\n  margin-top: 20px;\n}\n\n:deep(.el-input__inner) {\n  height: 45px;\n  font-size: 16px;\n}\n\n:deep(.el-form-item__content) {\n  flex-direction: column;\n}\n\n:deep(.el-button--large) {\n  height: 45px;\n  font-size: 16px;\n}\n\n/* 响应式调整 */\n@media (max-width: 480px) {\n  .login-box {\n    margin: 20px;\n    padding: 30px 20px;\n  }\n  \n  .login-header h1 {\n    font-size: 24px;\n  }\n  \n  .mode-switch .el-button {\n    min-width: 80px;\n    font-size: 14px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
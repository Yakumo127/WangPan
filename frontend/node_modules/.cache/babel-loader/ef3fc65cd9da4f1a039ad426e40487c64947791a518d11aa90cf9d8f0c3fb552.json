{"ast":null,"code":"import { ref, reactive, onMounted, computed } from \"vue\";\nimport { ElMessage, ElMessageBox } from \"element-plus\";\nimport { Delete, Refresh, Search, Document, Folder, RefreshLeft, View, DataLine } from \"@element-plus/icons-vue\";\nimport { getRecycleBinFiles, restoreFile, permanentDeleteFile, emptyRecycleBin } from \"@/api/file\";\nexport default {\n  __name: 'Recycle',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loading = ref(false);\n    const emptying = ref(false);\n    const restoring = ref(false);\n    const recycleItems = ref([]);\n    const searchKeyword = ref(\"\");\n    const selectedItems = ref([]);\n    const showDetailsDialog = ref(false);\n    const selectedItem = ref(null);\n    const recycleStats = ref({\n      totalItems: 0,\n      fileCount: 0,\n      folderCount: 0,\n      totalSize: 0\n    });\n\n    // 格式化文件大小\n    const formatFileSize = bytes => {\n      if (!bytes) return \"0 B\";\n      const k = 1024;\n      const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\"];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n    };\n\n    // 格式化存储大小\n    const formatStorage = bytes => {\n      return formatFileSize(bytes);\n    };\n\n    // 格式化日期时间\n    const formatDateTime = datetime => {\n      if (!datetime) return \"\";\n      return new Date(datetime).toLocaleString();\n    };\n\n    // 处理选择变化\n    const handleSelectionChange = selection => {\n      selectedItems.value = selection;\n    };\n\n    // 加载回收站项目\n    const loadRecycleItems = async () => {\n      loading.value = true;\n      try {\n        const response = await getRecycleBinFiles();\n        console.log(\"API Response:\", response);\n        recycleItems.value = response || [];\n\n        // 更新统计信息\n        recycleStats.value = {\n          totalItems: recycleItems.value.length,\n          fileCount: recycleItems.value.length,\n          folderCount: 0,\n          totalSize: recycleItems.value.reduce((sum, item) => sum + (item.size || 0), 0)\n        };\n      } catch (error) {\n        ElMessage.error(\"加载回收站项目失败\");\n        console.error(\"加载回收站项目失败:\", error);\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 刷新项目列表\n    const refreshItems = () => {\n      loadRecycleItems();\n    };\n\n    // 搜索项目\n    const searchItems = () => {\n      if (!searchKeyword.value.trim()) {\n        loadRecycleItems();\n        return;\n      }\n      const keyword = searchKeyword.value.toLowerCase();\n      recycleItems.value = recycleItems.value.filter(item => item.originalFilename.toLowerCase().includes(keyword) || item.filePath.toLowerCase().includes(keyword));\n      ElMessage.success(`找到 ${recycleItems.value.length} 个匹配项目`);\n    };\n\n    // 恢复单个项目\n    const restoreItem = async item => {\n      try {\n        await ElMessageBox.confirm(`确定要恢复 \"${item.originalFilename}\" 吗？`, \"恢复确认\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"success\"\n        });\n        await restoreFile(item.id);\n        ElMessage.success(\"文件恢复成功\");\n        await loadRecycleItems();\n      } catch (error) {\n        if (error !== \"cancel\") {\n          ElMessage.error(\"恢复文件失败\");\n          console.error(\"恢复文件失败:\", error);\n        }\n      }\n    };\n\n    // 恢复选中项目\n    const restoreSelected = async () => {\n      if (selectedItems.value.length === 0) {\n        ElMessage.warning(\"请选择要恢复的项目\");\n        return;\n      }\n      try {\n        await ElMessageBox.confirm(`确定要恢复选中的 ${selectedItems.value.length} 个文件吗？`, \"批量恢复\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"success\"\n        });\n        restoring.value = true;\n\n        // 批量恢复\n        for (const item of selectedItems.value) {\n          await restoreFile(item.id);\n        }\n        ElMessage.success(`成功恢复 ${selectedItems.value.length} 个文件`);\n        selectedItems.value = [];\n        await loadRecycleItems();\n      } catch (error) {\n        if (error !== \"cancel\") {\n          ElMessage.error(\"批量恢复失败\");\n          console.error(\"批量恢复失败:\", error);\n        }\n      } finally {\n        restoring.value = false;\n      }\n    };\n\n    // 彻底删除项目\n    const deletePermanently = async item => {\n      try {\n        await ElMessageBox.confirm(`确定要彻底删除 \"${item.originalFilename}\" 吗？此操作不可恢复！`, \"彻底删除\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"error\",\n          inputPattern: new RegExp(`^${item.originalFilename}$`),\n          inputPlaceholder: `请输入 \"${item.originalFilename}\" 确认删除`,\n          inputValidator: value => {\n            if (value !== item.originalFilename) {\n              return \"输入的文件名称不正确\";\n            }\n            return true;\n          },\n          showInput: true\n        });\n        await permanentDeleteFile(item.id);\n        ElMessage.success(\"文件已彻底删除\");\n        await loadRecycleItems();\n      } catch (error) {\n        if (error !== \"cancel\") {\n          ElMessage.error(\"彻底删除失败\");\n          console.error(\"彻底删除失败:\", error);\n        }\n      }\n    };\n\n    // 清空回收站\n    const emptyRecycleBinAction = async () => {\n      try {\n        await ElMessageBox.confirm(`确定要清空回收站吗？此操作将彻底删除所有文件，不可恢复！`, \"清空回收站\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"error\",\n          inputPattern: /^清空回收站$/,\n          inputPlaceholder: \"请输入 \\\"清空回收站\\\" 确认操作\",\n          inputValidator: value => {\n            if (value !== \"清空回收站\") {\n              return \"请输入 \\\"清空回收站\\\" 确认操作\";\n            }\n            return true;\n          },\n          showInput: true\n        });\n        emptying.value = true;\n        await emptyRecycleBin();\n        ElMessage.success(\"回收站已清空\");\n        await loadRecycleItems();\n      } catch (error) {\n        if (error !== \"cancel\") {\n          ElMessage.error(\"清空回收站失败\");\n          console.error(\"清空回收站失败:\", error);\n        }\n      } finally {\n        emptying.value = false;\n      }\n    };\n\n    // 查看项目详情\n    const viewItemDetails = item => {\n      selectedItem.value = item;\n      showDetailsDialog.value = true;\n    };\n    onMounted(() => {\n      loadRecycleItems();\n    });\n    const __returned__ = {\n      loading,\n      emptying,\n      restoring,\n      recycleItems,\n      searchKeyword,\n      selectedItems,\n      showDetailsDialog,\n      selectedItem,\n      recycleStats,\n      formatFileSize,\n      formatStorage,\n      formatDateTime,\n      handleSelectionChange,\n      loadRecycleItems,\n      refreshItems,\n      searchItems,\n      restoreItem,\n      restoreSelected,\n      deletePermanently,\n      emptyRecycleBinAction,\n      viewItemDetails,\n      ref,\n      reactive,\n      onMounted,\n      computed,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get Delete() {\n        return Delete;\n      },\n      get Refresh() {\n        return Refresh;\n      },\n      get Search() {\n        return Search;\n      },\n      get Document() {\n        return Document;\n      },\n      get Folder() {\n        return Folder;\n      },\n      get RefreshLeft() {\n        return RefreshLeft;\n      },\n      get View() {\n        return View;\n      },\n      get DataLine() {\n        return DataLine;\n      },\n      get getRecycleBinFiles() {\n        return getRecycleBinFiles;\n      },\n      get restoreFile() {\n        return restoreFile;\n      },\n      get permanentDeleteFile() {\n        return permanentDeleteFile;\n      },\n      get emptyRecycleBin() {\n        return emptyRecycleBin;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","computed","ElMessage","ElMessageBox","Delete","Refresh","Search","Document","Folder","RefreshLeft","View","DataLine","getRecycleBinFiles","restoreFile","permanentDeleteFile","emptyRecycleBin","loading","emptying","restoring","recycleItems","searchKeyword","selectedItems","showDetailsDialog","selectedItem","recycleStats","totalItems","fileCount","folderCount","totalSize","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatStorage","formatDateTime","datetime","Date","toLocaleString","handleSelectionChange","selection","value","loadRecycleItems","response","console","length","reduce","sum","item","size","error","refreshItems","searchItems","trim","keyword","toLowerCase","filter","originalFilename","includes","filePath","success","restoreItem","confirm","confirmButtonText","cancelButtonText","type","id","restoreSelected","warning","deletePermanently","inputPattern","RegExp","inputPlaceholder","inputValidator","showInput","emptyRecycleBinAction","viewItemDetails"],"sources":["/workspace/frontend/src/views/Recycle.vue"],"sourcesContent":["<template>\n  <div class=\"recycle-container\">\n    <!-- 工具栏 -->\n    <div class=\"toolbar\">\n      <div class=\"toolbar-left\">\n        <el-button type=\"danger\" @click=\"emptyRecycleBinAction\" :loading=\"emptying\">\n          <el-icon><Delete /></el-icon>\n          清空回收站\n        </el-button>\n        <el-button type=\"success\" @click=\"restoreSelected\" :disabled=\"!selectedItems.length\" :loading=\"restoring\">\n          <el-icon><RefreshLeft /></el-icon>\n          恢复选中\n        </el-button>\n        <el-button @click=\"refreshItems\" :loading=\"loading\">\n          <el-icon><Refresh /></el-icon>\n          刷新\n        </el-button>\n      </div>\n      \n      <div class=\"toolbar-right\">\n        <el-input\n          v-model=\"searchKeyword\"\n          placeholder=\"搜索回收站项目...\"\n          style=\"width: 200px\"\n          clearable\n          @keyup.enter=\"searchItems\"\n        >\n          <template #prefix>\n            <el-icon><Search /></el-icon>\n          </template>\n        </el-input>\n        <el-button @click=\"searchItems\">搜索</el-button>\n      </div>\n    </div>\n\n    <!-- 回收站统计 -->\n    <div class=\"stats-row\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <el-icon><Delete /></el-icon>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-number\">{{ recycleStats.totalItems || 0 }}</div>\n              <div class=\"stat-label\">总项目数</div>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <el-icon><Document /></el-icon>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-number\">{{ recycleStats.fileCount || 0 }}</div>\n              <div class=\"stat-label\">文件数</div>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <el-icon><Folder /></el-icon>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-number\">{{ recycleStats.folderCount || 0 }}</div>\n              <div class=\"stat-label\">文件夹数</div>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-card class=\"stat-card\">\n            <div class=\"stat-icon\">\n              <el-icon><DataLine /></el-icon>\n            </div>\n            <div class=\"stat-info\">\n              <div class=\"stat-number\">{{ formatStorage(recycleStats.totalSize || 0) }}</div>\n              <div class=\"stat-label\">总大小</div>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n    </div>\n\n    <!-- 回收站项目列表 -->\n    <div class=\"recycle-list\">\n      <el-table\n        :data=\"recycleItems\"\n        style=\"width: 100%\"\n        v-loading=\"loading\"\n        @selection-change=\"handleSelectionChange\"\n      >\n        <el-table-column type=\"selection\" width=\"55\" />\n        <el-table-column label=\"项目信息\" min-width=\"300\">\n          <template #default=\"{ row }\">\n            <div class=\"item-info\">\n              <el-icon class=\"item-icon\">\n                <Document />\n              </el-icon>\n              <div class=\"item-details\">\n                <div class=\"item-name\">{{ row.originalFilename }}</div>\n                <div class=\"item-meta\">\n                  <el-tag size=\"small\" type=\"primary\">\n                    文件\n                  </el-tag>\n                  <span class=\"item-size\">{{ formatFileSize(row.size) }}</span>\n                  <span class=\"original-path\">路径: {{ row.filePath }}</span>\n                </div>\n              </div>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"deleteTime\" label=\"删除时间\" width=\"180\">\n          <template #default=\"{ row }\">\n            {{ formatDateTime(row.deleteTime) }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"contentType\" label=\"文件类型\" width=\"120\" />\n        <el-table-column label=\"操作\" width=\"200\">\n          <template #default=\"{ row }\">\n            <el-button-group>\n              <el-button size=\"small\" type=\"success\" @click=\"restoreItem(row)\">\n                <el-icon><RefreshLeft /></el-icon>\n                恢复\n              </el-button>\n              <el-button size=\"small\" @click=\"viewItemDetails(row)\">\n                <el-icon><View /></el-icon>\n                详情\n              </el-button>\n              <el-button size=\"small\" type=\"danger\" @click=\"deletePermanently(row)\">\n                <el-icon><Delete /></el-icon>\n                彻底删除\n              </el-button>\n            </el-button-group>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 项目详情对话框 -->\n    <el-dialog v-model=\"showDetailsDialog\" title=\"项目详情\" width=\"600px\">\n      <div v-if=\"selectedItem\" class=\"item-details-content\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"文件名称\">{{ selectedItem.originalFilename }}</el-descriptions-item>\n          <el-descriptions-item label=\"文件类型\">\n            <el-tag type=\"primary\">\n              文件\n            </el-tag>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"文件大小\">{{ formatFileSize(selectedItem.size) }}</el-descriptions-item>\n          <el-descriptions-item label=\"删除时间\">{{ formatDateTime(selectedItem.deleteTime) }}</el-descriptions-item>\n          <el-descriptions-item label=\"创建时间\">{{ formatDateTime(selectedItem.createTime) }}</el-descriptions-item>\n          <el-descriptions-item label=\"文件路径\" :span=\"2\">{{ selectedItem.filePath }}</el-descriptions-item>\n          <el-descriptions-item label=\"文件类型\">{{ selectedItem.contentType }}</el-descriptions-item>\n          <el-descriptions-item label=\"下载次数\">{{ selectedItem.downloadCount || 0 }}</el-descriptions-item>\n        </el-descriptions>\n      </div>\n      \n      <template #footer>\n        <el-button @click=\"showDetailsDialog = false\">关闭</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted, computed } from \"vue\"\nimport { ElMessage, ElMessageBox } from \"element-plus\"\nimport { Delete, Refresh, Search, Document, Folder, RefreshLeft, View, DataLine } from \"@element-plus/icons-vue\"\nimport { getRecycleBinFiles, restoreFile, permanentDeleteFile, emptyRecycleBin } from \"@/api/file\"\n\nconst loading = ref(false)\nconst emptying = ref(false)\nconst restoring = ref(false)\nconst recycleItems = ref([])\nconst searchKeyword = ref(\"\")\nconst selectedItems = ref([])\nconst showDetailsDialog = ref(false)\nconst selectedItem = ref(null)\n\nconst recycleStats = ref({\n  totalItems: 0,\n  fileCount: 0,\n  folderCount: 0,\n  totalSize: 0\n})\n\n// 格式化文件大小\nconst formatFileSize = (bytes) => {\n  if (!bytes) return \"0 B\"\n  const k = 1024\n  const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\"]\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i]\n}\n\n// 格式化存储大小\nconst formatStorage = (bytes) => {\n  return formatFileSize(bytes)\n}\n\n// 格式化日期时间\nconst formatDateTime = (datetime) => {\n  if (!datetime) return \"\"\n  return new Date(datetime).toLocaleString()\n}\n\n// 处理选择变化\nconst handleSelectionChange = (selection) => {\n  selectedItems.value = selection\n}\n\n// 加载回收站项目\nconst loadRecycleItems = async () => {\n  loading.value = true\n  try {\n    const response = await getRecycleBinFiles()\n    console.log(\"API Response:\", response);\n    recycleItems.value = response || []\n    \n    // 更新统计信息\n    recycleStats.value = {\n      totalItems: recycleItems.value.length,\n      fileCount: recycleItems.value.length,\n      folderCount: 0,\n      totalSize: recycleItems.value.reduce((sum, item) => sum + (item.size || 0), 0)\n    }\n  } catch (error) {\n    ElMessage.error(\"加载回收站项目失败\")\n    console.error(\"加载回收站项目失败:\", error)\n  } finally {\n    loading.value = false\n  }\n}\n\n// 刷新项目列表\nconst refreshItems = () => {\n  loadRecycleItems()\n}\n\n// 搜索项目\nconst searchItems = () => {\n  if (!searchKeyword.value.trim()) {\n    loadRecycleItems()\n    return\n  }\n  \n  const keyword = searchKeyword.value.toLowerCase()\n  recycleItems.value = recycleItems.value.filter(item => \n    item.originalFilename.toLowerCase().includes(keyword) ||\n    item.filePath.toLowerCase().includes(keyword)\n  )\n  \n  ElMessage.success(`找到 ${recycleItems.value.length} 个匹配项目`)\n}\n\n// 恢复单个项目\nconst restoreItem = async (item) => {\n  try {\n    await ElMessageBox.confirm(\n      `确定要恢复 \"${item.originalFilename}\" 吗？`,\n      \"恢复确认\",\n      {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"success\"\n      }\n    )\n    \n    await restoreFile(item.id)\n    ElMessage.success(\"文件恢复成功\")\n    await loadRecycleItems()\n  } catch (error) {\n    if (error !== \"cancel\") {\n      ElMessage.error(\"恢复文件失败\")\n      console.error(\"恢复文件失败:\", error)\n    }\n  }\n}\n\n// 恢复选中项目\nconst restoreSelected = async () => {\n  if (selectedItems.value.length === 0) {\n    ElMessage.warning(\"请选择要恢复的项目\")\n    return\n  }\n  \n  try {\n    await ElMessageBox.confirm(\n      `确定要恢复选中的 ${selectedItems.value.length} 个文件吗？`,\n      \"批量恢复\",\n      {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"success\"\n      }\n    )\n    \n    restoring.value = true\n    \n    // 批量恢复\n    for (const item of selectedItems.value) {\n      await restoreFile(item.id)\n    }\n    \n    ElMessage.success(`成功恢复 ${selectedItems.value.length} 个文件`)\n    selectedItems.value = []\n    await loadRecycleItems()\n  } catch (error) {\n    if (error !== \"cancel\") {\n      ElMessage.error(\"批量恢复失败\")\n      console.error(\"批量恢复失败:\", error)\n    }\n  } finally {\n    restoring.value = false\n  }\n}\n\n// 彻底删除项目\nconst deletePermanently = async (item) => {\n  try {\n    await ElMessageBox.confirm(\n      `确定要彻底删除 \"${item.originalFilename}\" 吗？此操作不可恢复！`,\n      \"彻底删除\",\n      {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"error\",\n        inputPattern: new RegExp(`^${item.originalFilename}$`),\n        inputPlaceholder: `请输入 \"${item.originalFilename}\" 确认删除`,\n        inputValidator: (value) => {\n          if (value !== item.originalFilename) {\n            return \"输入的文件名称不正确\"\n          }\n          return true\n        },\n        showInput: true\n      }\n    )\n    \n    await permanentDeleteFile(item.id)\n    ElMessage.success(\"文件已彻底删除\")\n    await loadRecycleItems()\n  } catch (error) {\n    if (error !== \"cancel\") {\n      ElMessage.error(\"彻底删除失败\")\n      console.error(\"彻底删除失败:\", error)\n    }\n  }\n}\n\n// 清空回收站\nconst emptyRecycleBinAction = async () => {\n  try {\n    await ElMessageBox.confirm(\n      `确定要清空回收站吗？此操作将彻底删除所有文件，不可恢复！`,\n      \"清空回收站\",\n      {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"error\",\n        inputPattern: /^清空回收站$/,\n        inputPlaceholder: \"请输入 \\\"清空回收站\\\" 确认操作\",\n        inputValidator: (value) => {\n          if (value !== \"清空回收站\") {\n            return \"请输入 \\\"清空回收站\\\" 确认操作\"\n          }\n          return true\n        },\n        showInput: true\n      }\n    )\n    \n    emptying.value = true\n    \n    await emptyRecycleBin()\n    ElMessage.success(\"回收站已清空\")\n    await loadRecycleItems()\n  } catch (error) {\n    if (error !== \"cancel\") {\n      ElMessage.error(\"清空回收站失败\")\n      console.error(\"清空回收站失败:\", error)\n    }\n  } finally {\n    emptying.value = false\n  }\n}\n\n// 查看项目详情\nconst viewItemDetails = (item) => {\n  selectedItem.value = item\n  showDetailsDialog.value = true\n}\n\nonMounted(() => {\n  loadRecycleItems()\n})\n</script>\n\n<style scoped>\n.recycle-container {\n  padding: 20px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.toolbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 15px;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.toolbar-left {\n  display: flex;\n  gap: 10px;\n}\n\n.toolbar-right {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.stats-row {\n  margin-bottom: 20px;\n}\n\n.stat-card {\n  text-align: center;\n  padding: 20px;\n}\n\n.stat-icon {\n  font-size: 32px;\n  color: #f56c6c;\n  margin-bottom: 10px;\n}\n\n.stat-number {\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 5px;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #666;\n}\n\n.recycle-list {\n  flex: 1;\n  background: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  overflow: hidden;\n}\n\n.item-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.item-icon {\n  font-size: 18px;\n  color: #409EFF;\n}\n\n.item-details {\n  flex: 1;\n}\n\n.item-name {\n  font-weight: 500;\n  margin-bottom: 4px;\n}\n\n.item-meta {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\n.item-size {\n  font-size: 12px;\n  color: #666;\n}\n\n.original-path {\n  font-size: 12px;\n  color: #999;\n}\n\n.warning {\n  color: #e6a23c;\n  font-weight: bold;\n}\n\n.item-details-content {\n  padding: 10px 0;\n}\n\n.file-preview {\n  margin-top: 20px;\n}\n\n.preview-content {\n  margin-top: 10px;\n  padding: 20px;\n  background: #f5f5f5;\n  border-radius: 8px;\n  text-align: center;\n}\n\n:deep(.el-table) {\n  height: 100%;\n}\n\n:deep(.el-table__body-wrapper) {\n  overflow-y: auto;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { defineComponent, computed, reactive, toRefs, provide, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, createVNode, withCtx, createElementVNode, withModifiers, renderSlot, createCommentVNode, Fragment, renderList, normalizeStyle, createTextVNode, toDisplayString, createBlock, withKeys, vModelText, resolveDynamicComponent, vShow, createSlots, normalizeProps, guardReactiveProps } from 'vue';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport ElSelectMenu from './select-dropdown.mjs';\nimport useSelect from './useSelect.mjs';\nimport { selectV2Props, selectV2Emits } from './defaults.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { isArray } from '@vue/shared';\nimport { useCalcInputWidth } from '../../../hooks/use-calc-input-width/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElSelectV2\",\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon\n  },\n  directives: {\n    ClickOutside\n  },\n  props: selectV2Props,\n  emits: selectV2Emits,\n  setup(props, {\n    emit\n  }) {\n    const modelValue = computed(() => {\n      const {\n        modelValue: rawModelValue,\n        multiple\n      } = props;\n      const fallback = multiple ? [] : void 0;\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback;\n      }\n      return multiple ? fallback : rawModelValue;\n    });\n    const API = useSelect(reactive({\n      ...toRefs(props),\n      modelValue\n    }), emit);\n    const {\n      calculatorRef,\n      inputStyle\n    } = useCalcInputWidth();\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue\n      }),\n      expanded: API.expanded,\n      tooltipRef: API.tooltipRef,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect\n    });\n    const selectedLabel = computed(() => {\n      if (!props.multiple) {\n        return API.states.selectedLabel;\n      }\n      return API.states.cachedOptions.map(i => i.label);\n    });\n    return {\n      ...API,\n      modelValue,\n      selectedLabel,\n      calculatorRef,\n      inputStyle\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectRef\",\n    class: normalizeClass([_ctx.nsSelect.b(), _ctx.nsSelect.m(_ctx.selectSize)]),\n    onMouseenter: $event => _ctx.states.inputHovering = true,\n    onMouseleave: $event => _ctx.states.inputHovering = false\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"tooltipRef\",\n    visible: _ctx.dropdownMenuVisible,\n    teleported: _ctx.teleported,\n    \"popper-class\": [_ctx.nsSelect.e(\"popper\"), _ctx.popperClass],\n    \"popper-style\": _ctx.popperStyle,\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": _ctx.fallbackPlacements,\n    effect: _ctx.effect,\n    placement: _ctx.placement,\n    pure: \"\",\n    transition: `${_ctx.nsSelect.namespace.value}-zoom-in-top`,\n    trigger: \"click\",\n    persistent: _ctx.persistent,\n    \"append-to\": _ctx.appendTo,\n    \"show-arrow\": _ctx.showArrow,\n    offset: _ctx.offset,\n    onBeforeShow: _ctx.handleMenuEnter,\n    onHide: $event => _ctx.states.isBeforeHide = false\n  }, {\n    default: withCtx(() => [createElementVNode(\"div\", {\n      ref: \"wrapperRef\",\n      class: normalizeClass([_ctx.nsSelect.e(\"wrapper\"), _ctx.nsSelect.is(\"focused\", _ctx.isFocused), _ctx.nsSelect.is(\"hovering\", _ctx.states.inputHovering), _ctx.nsSelect.is(\"filterable\", _ctx.filterable), _ctx.nsSelect.is(\"disabled\", _ctx.selectDisabled)]),\n      onClick: withModifiers(_ctx.toggleMenu, [\"prevent\"])\n    }, [_ctx.$slots.prefix ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      ref: \"prefixRef\",\n      class: normalizeClass(_ctx.nsSelect.e(\"prefix\"))\n    }, [renderSlot(_ctx.$slots, \"prefix\")], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n      ref: \"selectionRef\",\n      class: normalizeClass([_ctx.nsSelect.e(\"selection\"), _ctx.nsSelect.is(\"near\", _ctx.multiple && !_ctx.$slots.prefix && !!_ctx.modelValue.length)])\n    }, [_ctx.multiple ? renderSlot(_ctx.$slots, \"tag\", {\n      key: 0,\n      data: _ctx.states.cachedOptions,\n      deleteTag: _ctx.deleteTag,\n      selectDisabled: _ctx.selectDisabled\n    }, () => [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.showTagList, item => {\n      return openBlock(), createElementBlock(\"div\", {\n        key: _ctx.getValueKey(_ctx.getValue(item)),\n        class: normalizeClass(_ctx.nsSelect.e(\"selected-item\"))\n      }, [createVNode(_component_el_tag, {\n        closable: !_ctx.selectDisabled && !_ctx.getDisabled(item),\n        size: _ctx.collapseTagSize,\n        type: _ctx.tagType,\n        effect: _ctx.tagEffect,\n        \"disable-transitions\": \"\",\n        style: normalizeStyle(_ctx.tagStyle),\n        onClose: $event => _ctx.deleteTag($event, item)\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", {\n          class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n        }, [renderSlot(_ctx.$slots, \"label\", {\n          label: _ctx.getLabel(item),\n          value: _ctx.getValue(item)\n        }, () => [createTextVNode(toDisplayString(_ctx.getLabel(item)), 1)])], 2)]),\n        _: 2\n      }, 1032, [\"closable\", \"size\", \"type\", \"effect\", \"style\", \"onClose\"])], 2);\n    }), 128)), _ctx.collapseTags && _ctx.modelValue.length > _ctx.maxCollapseTags ? (openBlock(), createBlock(_component_el_tooltip, {\n      key: 0,\n      ref: \"tagTooltipRef\",\n      disabled: _ctx.dropdownMenuVisible || !_ctx.collapseTagsTooltip,\n      \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n      effect: _ctx.effect,\n      placement: \"bottom\",\n      \"popper-class\": _ctx.popperClass,\n      \"popper-style\": _ctx.popperStyle,\n      teleported: _ctx.teleported\n    }, {\n      default: withCtx(() => [createElementVNode(\"div\", {\n        ref: \"collapseItemRef\",\n        class: normalizeClass(_ctx.nsSelect.e(\"selected-item\"))\n      }, [createVNode(_component_el_tag, {\n        closable: false,\n        size: _ctx.collapseTagSize,\n        type: _ctx.tagType,\n        effect: _ctx.tagEffect,\n        style: normalizeStyle(_ctx.collapseTagStyle),\n        \"disable-transitions\": \"\"\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", {\n          class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n        }, \" + \" + toDisplayString(_ctx.modelValue.length - _ctx.maxCollapseTags), 3)]),\n        _: 1\n      }, 8, [\"size\", \"type\", \"effect\", \"style\"])], 2)]),\n      content: withCtx(() => [createElementVNode(\"div\", {\n        ref: \"tagMenuRef\",\n        class: normalizeClass(_ctx.nsSelect.e(\"selection\"))\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.collapseTagList, selected => {\n        return openBlock(), createElementBlock(\"div\", {\n          key: _ctx.getValueKey(_ctx.getValue(selected)),\n          class: normalizeClass(_ctx.nsSelect.e(\"selected-item\"))\n        }, [createVNode(_component_el_tag, {\n          class: \"in-tooltip\",\n          closable: !_ctx.selectDisabled && !_ctx.getDisabled(selected),\n          size: _ctx.collapseTagSize,\n          type: _ctx.tagType,\n          effect: _ctx.tagEffect,\n          \"disable-transitions\": \"\",\n          onClose: $event => _ctx.deleteTag($event, selected)\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n          }, [renderSlot(_ctx.$slots, \"label\", {\n            label: _ctx.getLabel(selected),\n            value: _ctx.getValue(selected)\n          }, () => [createTextVNode(toDisplayString(_ctx.getLabel(selected)), 1)])], 2)]),\n          _: 2\n        }, 1032, [\"closable\", \"size\", \"type\", \"effect\", \"onClose\"])], 2);\n      }), 128))], 2)]),\n      _: 3\n    }, 8, [\"disabled\", \"effect\", \"popper-class\", \"popper-style\", \"teleported\"])) : createCommentVNode(\"v-if\", true)]) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n      class: normalizeClass([_ctx.nsSelect.e(\"selected-item\"), _ctx.nsSelect.e(\"input-wrapper\"), _ctx.nsSelect.is(\"hidden\", !_ctx.filterable)])\n    }, [withDirectives(createElementVNode(\"input\", {\n      id: _ctx.inputId,\n      ref: \"inputRef\",\n      \"onUpdate:modelValue\": $event => _ctx.states.inputValue = $event,\n      style: normalizeStyle(_ctx.inputStyle),\n      autocomplete: _ctx.autocomplete,\n      tabindex: _ctx.tabindex,\n      \"aria-autocomplete\": \"list\",\n      \"aria-haspopup\": \"listbox\",\n      autocapitalize: \"off\",\n      \"aria-expanded\": _ctx.expanded,\n      \"aria-label\": _ctx.ariaLabel,\n      class: normalizeClass([_ctx.nsSelect.e(\"input\"), _ctx.nsSelect.is(_ctx.selectSize)]),\n      disabled: _ctx.selectDisabled,\n      role: \"combobox\",\n      readonly: !_ctx.filterable,\n      spellcheck: \"false\",\n      type: \"text\",\n      name: _ctx.name,\n      onInput: _ctx.onInput,\n      onCompositionstart: _ctx.handleCompositionStart,\n      onCompositionupdate: _ctx.handleCompositionUpdate,\n      onCompositionend: _ctx.handleCompositionEnd,\n      onKeydown: [withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"]), withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"]), withKeys(withModifiers(_ctx.onKeyboardSelect, [\"stop\", \"prevent\"]), [\"enter\"]), withKeys(withModifiers(_ctx.handleEsc, [\"stop\", \"prevent\"]), [\"esc\"]), withKeys(withModifiers(_ctx.handleDel, [\"stop\"]), [\"delete\"])],\n      onClick: withModifiers(_ctx.toggleMenu, [\"stop\"])\n    }, null, 46, [\"id\", \"onUpdate:modelValue\", \"autocomplete\", \"tabindex\", \"aria-expanded\", \"aria-label\", \"disabled\", \"readonly\", \"name\", \"onInput\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onKeydown\", \"onClick\"]), [[vModelText, _ctx.states.inputValue]]), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n      key: 0,\n      ref: \"calculatorRef\",\n      \"aria-hidden\": \"true\",\n      class: normalizeClass(_ctx.nsSelect.e(\"input-calculator\")),\n      textContent: toDisplayString(_ctx.states.inputValue)\n    }, null, 10, [\"textContent\"])) : createCommentVNode(\"v-if\", true)], 2), _ctx.shouldShowPlaceholder ? (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      class: normalizeClass([_ctx.nsSelect.e(\"selected-item\"), _ctx.nsSelect.e(\"placeholder\"), _ctx.nsSelect.is(\"transparent\", !_ctx.hasModelValue || _ctx.expanded && !_ctx.states.inputValue)])\n    }, [_ctx.hasModelValue ? renderSlot(_ctx.$slots, \"label\", {\n      key: 0,\n      label: _ctx.currentPlaceholder,\n      value: _ctx.modelValue\n    }, () => [createElementVNode(\"span\", null, toDisplayString(_ctx.currentPlaceholder), 1)]) : (openBlock(), createElementBlock(\"span\", {\n      key: 1\n    }, toDisplayString(_ctx.currentPlaceholder), 1))], 2)) : createCommentVNode(\"v-if\", true)], 2), createElementVNode(\"div\", {\n      ref: \"suffixRef\",\n      class: normalizeClass(_ctx.nsSelect.e(\"suffix\"))\n    }, [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n      key: 0,\n      class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsInput.e(\"icon\"), _ctx.iconReverse])\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n      _: 1\n    }, 8, [\"class\"])), [[vShow, !_ctx.showClearBtn]]) : createCommentVNode(\"v-if\", true), _ctx.showClearBtn && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n      key: 1,\n      class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsInput.e(\"icon\"), _ctx.nsSelect.e(\"clear\")]),\n      onClick: withModifiers(_ctx.handleClear, [\"prevent\", \"stop\"])\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n      _: 1\n    }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.validateState && _ctx.validateIcon && _ctx.needStatusIcon ? (openBlock(), createBlock(_component_el_icon, {\n      key: 2,\n      class: normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsInput.e(\"validateIcon\"), _ctx.nsInput.is(\"loading\", _ctx.validateState === \"validating\")])\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.validateIcon)))]),\n      _: 1\n    }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)], 10, [\"onClick\"])]),\n    content: withCtx(() => [createVNode(_component_el_select_menu, {\n      ref: \"menuRef\",\n      data: _ctx.filteredOptions,\n      width: _ctx.popperSize,\n      \"hovering-index\": _ctx.states.hoveringIndex,\n      \"scrollbar-always-on\": _ctx.scrollbarAlwaysOn\n    }, createSlots({\n      default: withCtx(scope => [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps(scope)))]),\n      _: 2\n    }, [_ctx.$slots.header ? {\n      name: \"header\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"header\")),\n        onClick: withModifiers(() => {}, [\"stop\"])\n      }, [renderSlot(_ctx.$slots, \"header\")], 10, [\"onClick\"])])\n    } : void 0, _ctx.$slots.loading && _ctx.loading ? {\n      name: \"loading\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"loading\"))\n      }, [renderSlot(_ctx.$slots, \"loading\")], 2)])\n    } : _ctx.loading || _ctx.filteredOptions.length === 0 ? {\n      name: \"empty\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"empty\"))\n      }, [renderSlot(_ctx.$slots, \"empty\", {}, () => [createElementVNode(\"span\", null, toDisplayString(_ctx.emptyText), 1)])], 2)])\n    } : void 0, _ctx.$slots.footer ? {\n      name: \"footer\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"footer\")),\n        onClick: withModifiers(() => {}, [\"stop\"])\n      }, [renderSlot(_ctx.$slots, \"footer\")], 10, [\"onClick\"])])\n    } : void 0]), 1032, [\"data\", \"width\", \"hovering-index\", \"scrollbar-always-on\"])]),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-style\", \"popper-options\", \"fallback-placements\", \"effect\", \"placement\", \"transition\", \"persistent\", \"append-to\", \"show-arrow\", \"offset\", \"onBeforeShow\", \"onHide\"])], 42, [\"onMouseenter\", \"onMouseleave\"])), [[_directive_click_outside, _ctx.handleClickOutside, _ctx.popperRef]]);\n}\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"select.vue\"]]);\nexport { Select as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","ElSelectMenu","ElTag","ElTooltip","ElIcon","directives","ClickOutside","props","selectV2Props","emits","selectV2Emits","setup","emit","modelValue","computed","rawModelValue","multiple","fallback","isArray","API","useSelect","reactive","toRefs","calculatorRef","inputStyle","useCalcInputWidth","provide","selectV2InjectionKey","height","popupHeight","expanded","tooltipRef","onSelect","onHover","onKeyboardNavigate","onKeyboardSelect","selectedLabel","states","cachedOptions","map","i","label","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_el_tag","resolveComponent","inputHovering","onMouseleave","$event","createVNode","_component_el_tooltip","ref","visible","dropdownMenuVisible","teleported","nsSelect","e","popperClass","popperStyle","popperOptions","fallbackPlacements","effect","placement","pure","transition","namespace","value","trigger","persistent","appendTo","showArrow","offset","onBeforeShow","handleMenuEnter","onHide","isBeforeHide","default","withCtx","createElementVNode","class","normalizeClass","is","isFocused","filterable","selectDisabled","onClick","withModifiers","toggleMenu","$slots","prefix","openBlock","createElementBlock","key","renderSlot","createCommentVNode","length","data","deleteTag","Fragment","renderList","showTagList","item","getValueKey","getValue","tagEffect","style","normalizeStyle","tagStyle","onClose","getLabel","createTextVNode","toDisplayString","collapseTags","maxCollapseTags","createBlock","disabled","collapseTagsTooltip","closable","size","collapseTagSize","type","tagType","collapseTagStyle","collapseTagList","selected","getDisabled","_","autocomplete","tabindex","autocapitalize","selectSize","role","readonly","spellcheck","onInput","onCompositionstart","handleCompositionStart","onCompositionupdate","handleCompositionUpdate","withKeys","handleEsc","handleDel","inputValue","shouldShowPlaceholder","hasModelValue","showClearBtn","clearIcon","_component_el_icon","nsInput","handleClear","resolveDynamicComponent","validateState","validateIcon","needStatusIcon","content","_component_el_select_menu","filteredOptions","width","popperSize","hoveringIndex","scrollbarAlwaysOn","createSlots","scope","normalizeProps","guardReactiveProps","header","fn","be","loading","emptyText","footer","Select","_export_sfc"],"sources":["../../../../../../packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelect.b(), nsSelect.m(selectSize)]\"\n    @mouseenter=\"states.inputHovering = true\"\n    @mouseleave=\"states.inputHovering = false\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownMenuVisible\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass!]\"\n      :popper-style=\"popperStyle\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"fallbackPlacements\"\n      :effect=\"effect\"\n      :placement=\"placement\"\n      pure\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      :append-to=\"appendTo\"\n      :show-arrow=\"showArrow\"\n      :offset=\"offset\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.isBeforeHide = false\"\n    >\n      <template #default>\n        <div\n          ref=\"wrapperRef\"\n          :class=\"[\n            nsSelect.e('wrapper'),\n            nsSelect.is('focused', isFocused),\n            nsSelect.is('hovering', states.inputHovering),\n            nsSelect.is('filterable', filterable),\n            nsSelect.is('disabled', selectDisabled),\n          ]\"\n          @click.prevent=\"toggleMenu\"\n        >\n          <div\n            v-if=\"$slots.prefix\"\n            ref=\"prefixRef\"\n            :class=\"nsSelect.e('prefix')\"\n          >\n            <slot name=\"prefix\" />\n          </div>\n          <div\n            ref=\"selectionRef\"\n            :class=\"[\n              nsSelect.e('selection'),\n              nsSelect.is(\n                'near',\n                multiple && !$slots.prefix && !!modelValue.length\n              ),\n            ]\"\n          >\n            <slot\n              v-if=\"multiple\"\n              name=\"tag\"\n              :data=\"states.cachedOptions\"\n              :delete-tag=\"deleteTag\"\n              :select-disabled=\"selectDisabled\"\n            >\n              <div\n                v-for=\"item in showTagList\"\n                :key=\"getValueKey(getValue(item))\"\n                :class=\"nsSelect.e('selected-item')\"\n              >\n                <el-tag\n                  :closable=\"!selectDisabled && !getDisabled(item)\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  :effect=\"tagEffect\"\n                  disable-transitions\n                  :style=\"tagStyle\"\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\">\n                    <slot\n                      name=\"label\"\n                      :label=\"getLabel(item)\"\n                      :value=\"getValue(item)\"\n                    >\n                      {{ getLabel(item) }}\n                    </slot>\n                  </span>\n                </el-tag>\n              </div>\n\n              <el-tooltip\n                v-if=\"collapseTags && modelValue.length > maxCollapseTags\"\n                ref=\"tagTooltipRef\"\n                :disabled=\"dropdownMenuVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                :effect=\"effect\"\n                placement=\"bottom\"\n                :popper-class=\"popperClass\"\n                :popper-style=\"popperStyle\"\n                :teleported=\"teleported\"\n              >\n                <template #default>\n                  <div\n                    ref=\"collapseItemRef\"\n                    :class=\"nsSelect.e('selected-item')\"\n                  >\n                    <el-tag\n                      :closable=\"false\"\n                      :size=\"collapseTagSize\"\n                      :type=\"tagType\"\n                      :effect=\"tagEffect\"\n                      :style=\"collapseTagStyle\"\n                      disable-transitions\n                    >\n                      <span :class=\"nsSelect.e('tags-text')\">\n                        + {{ modelValue.length - maxCollapseTags }}\n                      </span>\n                    </el-tag>\n                  </div>\n                </template>\n                <template #content>\n                  <div ref=\"tagMenuRef\" :class=\"nsSelect.e('selection')\">\n                    <div\n                      v-for=\"selected in collapseTagList\"\n                      :key=\"getValueKey(getValue(selected))\"\n                      :class=\"nsSelect.e('selected-item')\"\n                    >\n                      <el-tag\n                        class=\"in-tooltip\"\n                        :closable=\"!selectDisabled && !getDisabled(selected)\"\n                        :size=\"collapseTagSize\"\n                        :type=\"tagType\"\n                        :effect=\"tagEffect\"\n                        disable-transitions\n                        @close=\"deleteTag($event, selected)\"\n                      >\n                        <span :class=\"nsSelect.e('tags-text')\">\n                          <slot\n                            name=\"label\"\n                            :label=\"getLabel(selected)\"\n                            :value=\"getValue(selected)\"\n                          >\n                            {{ getLabel(selected) }}\n                          </slot>\n                        </span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </slot>\n            <div\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('input-wrapper'),\n                nsSelect.is('hidden', !filterable),\n              ]\"\n            >\n              <input\n                :id=\"inputId\"\n                ref=\"inputRef\"\n                v-model=\"states.inputValue\"\n                :style=\"inputStyle\"\n                :autocomplete=\"autocomplete\"\n                :tabindex=\"tabindex\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-label=\"ariaLabel\"\n                :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n                :disabled=\"selectDisabled\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n                @click.stop=\"toggleMenu\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelect.e('input-calculator')\"\n                v-text=\"states.inputValue\"\n              />\n            </div>\n            <div\n              v-if=\"shouldShowPlaceholder\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('placeholder'),\n                nsSelect.is(\n                  'transparent',\n                  !hasModelValue || (expanded && !states.inputValue)\n                ),\n              ]\"\n            >\n              <slot\n                v-if=\"hasModelValue\"\n                name=\"label\"\n                :label=\"currentPlaceholder\"\n                :value=\"modelValue\"\n              >\n                <span>{{ currentPlaceholder }}</span>\n              </slot>\n              <span v-else>{{ currentPlaceholder }}</span>\n            </div>\n          </div>\n          <div ref=\"suffixRef\" :class=\"nsSelect.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelect.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[\n                nsSelect.e('caret'),\n                nsInput.e('icon'),\n                nsSelect.e('clear'),\n              ]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon && needStatusIcon\"\n              :class=\"[\n                nsInput.e('icon'),\n                nsInput.e('validateIcon'),\n                nsInput.is('loading', validateState === 'validating'),\n              ]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </div>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n        >\n          <template v-if=\"$slots.header\" #header>\n            <div :class=\"nsSelect.be('dropdown', 'header')\" @click.stop>\n              <slot name=\"header\" />\n            </div>\n          </template>\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\" />\n          </template>\n          <template v-if=\"$slots.loading && loading\" #loading>\n            <div :class=\"nsSelect.be('dropdown', 'loading')\">\n              <slot name=\"loading\" />\n            </div>\n          </template>\n          <template v-else-if=\"loading || filteredOptions.length === 0\" #empty>\n            <div :class=\"nsSelect.be('dropdown', 'empty')\">\n              <slot name=\"empty\">\n                <span>{{ emptyText }}</span>\n              </slot>\n            </div>\n          </template>\n          <template v-if=\"$slots.footer\" #footer>\n            <div :class=\"nsSelect.be('dropdown', 'footer')\" @click.stop>\n              <slot name=\"footer\" />\n            </div>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, provide, reactive, toRefs } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { useCalcInputWidth } from '@element-plus/hooks'\nimport ElSelectMenu from './select-dropdown'\nimport useSelect from './useSelect'\nimport { selectV2Emits, selectV2Props } from './defaults'\nimport { selectV2InjectionKey } from './token'\n\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: selectV2Props,\n  emits: selectV2Emits,\n  setup(props, { emit }) {\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n      return multiple ? fallback : rawModelValue\n    })\n\n    const API = useSelect(\n      reactive({\n        ...toRefs(props),\n        modelValue,\n      }),\n      emit\n    )\n    const { calculatorRef, inputStyle } = useCalcInputWidth()\n\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue,\n      }),\n      expanded: API.expanded,\n      tooltipRef: API.tooltipRef,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    })\n\n    const selectedLabel = computed(() => {\n      if (!props.multiple) {\n        return API.states.selectedLabel\n      }\n      return API.states.cachedOptions.map((i) => i.label as string)\n    })\n\n    return {\n      ...API,\n      modelValue,\n      selectedLabel,\n      calculatorRef,\n      inputStyle,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
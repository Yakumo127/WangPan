{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { ref, computed } from 'vue';\nimport { login, register, getUserInfo } from '@/api/auth';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nexport const useAuthStore = defineStore('auth', () => {\n  const token = ref(getToken());\n  const user = ref(null);\n  const roles = ref([]);\n  const isAuthenticated = computed(() => !!token.value);\n  const isAdmin = computed(() => roles.value.includes('ROLE_ADMIN'));\n\n  // 登录\n  async function handleLogin(loginData) {\n    try {\n      const response = await login(loginData);\n      token.value = response.token;\n      setToken(response.token);\n\n      // 确保token已经设置到localStorage\n      await new Promise(resolve => setTimeout(resolve, 100));\n      await fetchUserInfo();\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // 注册\n  async function handleRegister(registerData) {\n    try {\n      const response = await register(registerData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // 获取用户信息\n  async function fetchUserInfo() {\n    try {\n      console.log('正在获取用户信息...');\n      const response = await getUserInfo();\n      console.log('获取用户信息成功:', response);\n      user.value = response;\n      roles.value = response.role ? [response.role] : [];\n      return response;\n    } catch (error) {\n      console.error('获取用户信息失败:', error);\n      if (error.response) {\n        console.error('错误状态:', error.response.status);\n        console.error('错误数据:', error.response.data);\n      }\n      throw error;\n    }\n  }\n\n  // 登出\n  function logout() {\n    // 清除store中的数据\n    token.value = null;\n    user.value = null;\n    roles.value = [];\n\n    // 清除localStorage中的数据\n    localStorage.removeItem('enterprise_file_manager_token');\n    localStorage.removeItem('enterprise_file_manager_user');\n    localStorage.removeItem('enterprise_file_manager_roles');\n\n    // 清除sessionStorage中的数据\n    sessionStorage.clear();\n\n    // 清除token\n    removeToken();\n  }\n  return {\n    token,\n    user,\n    roles,\n    isAuthenticated,\n    isAdmin,\n    handleLogin,\n    handleRegister,\n    fetchUserInfo,\n    logout\n  };\n});","map":{"version":3,"names":["defineStore","ref","computed","login","register","getUserInfo","getToken","setToken","removeToken","useAuthStore","token","user","roles","isAuthenticated","value","isAdmin","includes","handleLogin","loginData","response","Promise","resolve","setTimeout","fetchUserInfo","error","handleRegister","registerData","console","log","role","status","data","logout","localStorage","removeItem","sessionStorage","clear"],"sources":["/workspace/frontend/src/store/auth.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport { login, register, getUserInfo } from '@/api/auth'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\n\nexport const useAuthStore = defineStore('auth', () => {\n  const token = ref(getToken())\n  const user = ref(null)\n  const roles = ref([])\n\n  const isAuthenticated = computed(() => !!token.value)\n  const isAdmin = computed(() => roles.value.includes('ROLE_ADMIN'))\n\n  // 登录\n  async function handleLogin(loginData) {\n    try {\n      const response = await login(loginData)\n      token.value = response.token\n      setToken(response.token)\n      \n      // 确保token已经设置到localStorage\n      await new Promise(resolve => setTimeout(resolve, 100))\n      \n      await fetchUserInfo()\n      return response\n    } catch (error) {\n      throw error\n    }\n  }\n\n  // 注册\n  async function handleRegister(registerData) {\n    try {\n      const response = await register(registerData)\n      return response\n    } catch (error) {\n      throw error\n    }\n  }\n\n  // 获取用户信息\n  async function fetchUserInfo() {\n    try {\n      console.log('正在获取用户信息...')\n      const response = await getUserInfo()\n      console.log('获取用户信息成功:', response)\n      user.value = response\n      roles.value = response.role ? [response.role] : []\n      return response\n    } catch (error) {\n      console.error('获取用户信息失败:', error)\n      if (error.response) {\n        console.error('错误状态:', error.response.status)\n        console.error('错误数据:', error.response.data)\n      }\n      throw error\n    }\n  }\n\n  // 登出\n  function logout() {\n    // 清除store中的数据\n    token.value = null\n    user.value = null\n    roles.value = []\n    \n    // 清除localStorage中的数据\n    localStorage.removeItem('enterprise_file_manager_token')\n    localStorage.removeItem('enterprise_file_manager_user')\n    localStorage.removeItem('enterprise_file_manager_roles')\n    \n    // 清除sessionStorage中的数据\n    sessionStorage.clear()\n    \n    // 清除token\n    removeToken()\n  }\n\n  return {\n    token,\n    user,\n    roles,\n    isAuthenticated,\n    isAdmin,\n    handleLogin,\n    handleRegister,\n    fetchUserInfo,\n    logout\n  }\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
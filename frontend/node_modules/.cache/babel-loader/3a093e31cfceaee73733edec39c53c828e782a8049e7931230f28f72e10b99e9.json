{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { UploadFilled } from '@element-plus/icons-vue';\nimport { getFiles, deleteFile as deleteFileApi } from '@/api/file';\nimport { getToken } from '@/utils/auth';\nexport default {\n  name: 'Files',\n  components: {\n    UploadFilled\n  },\n  setup() {\n    const files = ref([]);\n    const currentPage = ref(1);\n    const pageSize = ref(20);\n    const total = ref(0);\n    const showUploadDialog = ref(false);\n    const uploadHeaders = {\n      'Authorization': `Bearer ${getToken()}`\n    };\n    const loadFiles = async () => {\n      try {\n        const response = await getFiles({\n          page: currentPage.value - 1,\n          size: pageSize.value\n        });\n        files.value = response.data.content;\n        total.value = response.data.totalElements;\n      } catch (error) {\n        ElMessage.error('加载文件列表失败');\n      }\n    };\n    const handleSizeChange = val => {\n      pageSize.value = val;\n      loadFiles();\n    };\n    const handleCurrentChange = val => {\n      currentPage.value = val;\n      loadFiles();\n    };\n    const downloadFile = file => {\n      window.open(`/api/files/download/${file.id}`, '_blank');\n    };\n    const deleteFile = async file => {\n      try {\n        await ElMessageBox.confirm('确定要删除这个文件吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        await deleteFileApi(file.id);\n        ElMessage.success('删除成功');\n        loadFiles();\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('删除失败');\n        }\n      }\n    };\n    const beforeUpload = file => {\n      const isLt100M = file.size / 1024 / 1024 < 100;\n      if (!isLt100M) {\n        ElMessage.error('文件大小不能超过 100MB!');\n      }\n      return isLt100M;\n    };\n    const handleUploadSuccess = () => {\n      ElMessage.success('上传成功');\n      showUploadDialog.value = false;\n      loadFiles();\n    };\n    const handleUploadError = () => {\n      ElMessage.error('上传失败');\n    };\n    const formatFileSize = bytes => {\n      if (bytes === 0) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    };\n    const formatDate = dateString => {\n      return new Date(dateString).toLocaleString();\n    };\n    onMounted(() => {\n      loadFiles();\n    });\n    return {\n      files,\n      currentPage,\n      pageSize,\n      total,\n      showUploadDialog,\n      uploadHeaders,\n      handleSizeChange,\n      handleCurrentChange,\n      downloadFile,\n      deleteFile,\n      beforeUpload,\n      handleUploadSuccess,\n      handleUploadError,\n      formatFileSize,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","ElMessageBox","UploadFilled","getFiles","deleteFile","deleteFileApi","getToken","name","components","setup","files","currentPage","pageSize","total","showUploadDialog","uploadHeaders","loadFiles","response","page","value","size","data","content","totalElements","error","handleSizeChange","val","handleCurrentChange","downloadFile","file","window","open","id","confirm","confirmButtonText","cancelButtonText","type","success","beforeUpload","isLt100M","handleUploadSuccess","handleUploadError","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","dateString","Date","toLocaleString"],"sources":["/workspace/frontend/src/views/admin/Files.vue"],"sourcesContent":["<template>\n  <div class=\"files-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>文件管理</span>\n          <el-button type=\"primary\" @click=\"showUploadDialog = true\">\n            上传文件\n          </el-button>\n        </div>\n      </template>\n      \n      <el-table :data=\"files\" style=\"width: 100%\">\n        <el-table-column prop=\"fileName\" label=\"文件名\" width=\"200\" />\n        <el-table-column prop=\"fileSize\" label=\"文件大小\" width=\"120\">\n          <template #default=\"scope\">\n            {{ formatFileSize(scope.row.fileSize) }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"contentType\" label=\"文件类型\" width=\"120\" />\n        <el-table-column prop=\"downloadCount\" label=\"下载次数\" width=\"100\" />\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\">\n          <template #default=\"scope\">\n            {{ formatDate(scope.row.createTime) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"200\">\n          <template #default=\"scope\">\n            <el-button size=\"small\" @click=\"downloadFile(scope.row)\">\n              下载\n            </el-button>\n            <el-button size=\"small\" type=\"danger\" @click=\"deleteFile(scope.row)\">\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div class=\"pagination\">\n        <el-pagination\n          v-model:current-page=\"currentPage\"\n          v-model:page-size=\"pageSize\"\n          :total=\"total\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n    \n    <!-- 上传对话框 -->\n    <el-dialog v-model=\"showUploadDialog\" title=\"上传文件\" width=\"500px\">\n      <el-upload\n        class=\"upload-demo\"\n        drag\n        action=\"/api/files/upload\"\n        :headers=\"uploadHeaders\"\n        :on-success=\"handleUploadSuccess\"\n        :on-error=\"handleUploadError\"\n        :before-upload=\"beforeUpload\"\n      >\n        <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n        <div class=\"el-upload__text\">\n          拖拽文件到此处或 <em>点击上传</em>\n        </div>\n      </el-upload>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { UploadFilled } from '@element-plus/icons-vue'\nimport { getFiles, deleteFile as deleteFileApi } from '@/api/file'\nimport { getToken } from '@/utils/auth'\n\nexport default {\n  name: 'Files',\n  components: {\n    UploadFilled\n  },\n  setup() {\n    const files = ref([])\n    const currentPage = ref(1)\n    const pageSize = ref(20)\n    const total = ref(0)\n    const showUploadDialog = ref(false)\n    \n    const uploadHeaders = {\n      'Authorization': `Bearer ${getToken()}`\n    }\n    \n    const loadFiles = async () => {\n      try {\n        const response = await getFiles({\n          page: currentPage.value - 1,\n          size: pageSize.value\n        })\n        files.value = response.data.content\n        total.value = response.data.totalElements\n      } catch (error) {\n        ElMessage.error('加载文件列表失败')\n      }\n    }\n    \n    const handleSizeChange = (val) => {\n      pageSize.value = val\n      loadFiles()\n    }\n    \n    const handleCurrentChange = (val) => {\n      currentPage.value = val\n      loadFiles()\n    }\n    \n    const downloadFile = (file) => {\n      window.open(`/api/files/download/${file.id}`, '_blank')\n    }\n    \n    const deleteFile = async (file) => {\n      try {\n        await ElMessageBox.confirm('确定要删除这个文件吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        await deleteFileApi(file.id)\n        ElMessage.success('删除成功')\n        loadFiles()\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('删除失败')\n        }\n      }\n    }\n    \n    const beforeUpload = (file) => {\n      const isLt100M = file.size / 1024 / 1024 < 100\n      if (!isLt100M) {\n        ElMessage.error('文件大小不能超过 100MB!')\n      }\n      return isLt100M\n    }\n    \n    const handleUploadSuccess = () => {\n      ElMessage.success('上传成功')\n      showUploadDialog.value = false\n      loadFiles()\n    }\n    \n    const handleUploadError = () => {\n      ElMessage.error('上传失败')\n    }\n    \n    const formatFileSize = (bytes) => {\n      if (bytes === 0) return '0 B'\n      const k = 1024\n      const sizes = ['B', 'KB', 'MB', 'GB']\n      const i = Math.floor(Math.log(bytes) / Math.log(k))\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n    }\n    \n    const formatDate = (dateString) => {\n      return new Date(dateString).toLocaleString()\n    }\n    \n    onMounted(() => {\n      loadFiles()\n    })\n    \n    return {\n      files,\n      currentPage,\n      pageSize,\n      total,\n      showUploadDialog,\n      uploadHeaders,\n      handleSizeChange,\n      handleCurrentChange,\n      downloadFile,\n      deleteFile,\n      beforeUpload,\n      handleUploadSuccess,\n      handleUploadError,\n      formatFileSize,\n      formatDate\n    }\n  }\n}\n</script>\n\n<style scoped>\n.files-container {\n  padding: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.pagination {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.upload-demo {\n  text-align: center;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { Document, FolderOpened, User, DataLine, Upload, Refresh, Download, Delete, Folder, ArrowRight, PieChart } from '@element-plus/icons-vue';\nimport { getFileList } from '@/api/file';\nimport { useAuthStore } from '@/store/auth';\nexport default {\n  __name: 'Home',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const authStore = useAuthStore();\n    const loading = ref(false);\n    const userStats = ref({\n      totalFiles: 0,\n      totalFolders: 0,\n      usedStorage: 0,\n      storageLimit: 1024 * 1024 * 1024 // 1GB\n    });\n    const recentActivities = ref([]);\n    const recentFiles = ref([]);\n    const user = computed(() => authStore.user);\n    const currentDate = computed(() => new Date().toLocaleDateString('zh-CN', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      weekday: 'long'\n    }));\n    const storagePercentage = computed(() => {\n      if (!userStats.value.storageLimit) return 0;\n      return Math.round(userStats.value.usedStorage / userStats.value.storageLimit * 100);\n    });\n\n    // 格式化存储大小\n    const formatStorage = bytes => {\n      if (!bytes) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    };\n\n    // 格式化文件大小\n    const formatFileSize = bytes => {\n      if (!bytes) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    };\n\n    // 格式化时间\n    const formatTime = time => {\n      if (!time) return '';\n      const date = new Date(time);\n      const now = new Date();\n      const diff = now - date;\n      if (diff < 60000) return '刚刚';\n      if (diff < 3600000) return Math.floor(diff / 60000) + '分钟前';\n      if (diff < 86400000) return Math.floor(diff / 3600000) + '小时前';\n      if (diff < 604800000) return Math.floor(diff / 86400000) + '天前';\n      return date.toLocaleDateString();\n    };\n\n    // 加载用户统计信息\n    const loadUserStats = async () => {\n      loading.value = true;\n      try {\n        const response = await getFileList();\n        const files = response || [];\n        userStats.value = {\n          totalFiles: files.length,\n          totalFolders: files.filter(f => f.isDirectory).length,\n          usedStorage: files.reduce((sum, file) => sum + (file.size || 0), 0),\n          storageLimit: user.value?.quotaLimit || 1024 * 1024 * 1024\n        };\n\n        // 更新最近文件\n        recentFiles.value = files.filter(f => !f.isDirectory).sort((a, b) => new Date(b.createTime) - new Date(a.createTime)).slice(0, 8);\n\n        // 生成最近活动\n        recentActivities.value = files.sort((a, b) => new Date(b.createTime) - new Date(a.createTime)).slice(0, 5).map(file => ({\n          id: file.id,\n          type: 'upload',\n          title: `上传了文件 \"${file.originalFilename || file.name}\"`,\n          time: file.createTime\n        }));\n      } catch (error) {\n        ElMessage.error('加载统计信息失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 刷新活动记录\n    const refreshActivities = () => {\n      loadUserStats();\n    };\n\n    // 页面跳转\n    const goToUpload = () => {\n      router.push('/files');\n    };\n    const goToFiles = () => {\n      router.push('/files');\n    };\n    const goToProfile = () => {\n      router.push('/profile');\n    };\n\n    // 下载文件\n    const downloadFile = async file => {\n      try {\n        const {\n          downloadFile: downloadFileApi\n        } = await import('@/api/file');\n        const response = await downloadFileApi(file.id);\n        const blob = new Blob([response.data]);\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = file.originalFilename || file.name;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      } catch (error) {\n        ElMessage.error('文件下载失败');\n      }\n    };\n    onMounted(() => {\n      loadUserStats();\n    });\n    const __returned__ = {\n      router,\n      authStore,\n      loading,\n      userStats,\n      recentActivities,\n      recentFiles,\n      user,\n      currentDate,\n      storagePercentage,\n      formatStorage,\n      formatFileSize,\n      formatTime,\n      loadUserStats,\n      refreshActivities,\n      goToUpload,\n      goToFiles,\n      goToProfile,\n      downloadFile,\n      ref,\n      computed,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get Document() {\n        return Document;\n      },\n      get FolderOpened() {\n        return FolderOpened;\n      },\n      get User() {\n        return User;\n      },\n      get DataLine() {\n        return DataLine;\n      },\n      get Upload() {\n        return Upload;\n      },\n      get Refresh() {\n        return Refresh;\n      },\n      get Download() {\n        return Download;\n      },\n      get Delete() {\n        return Delete;\n      },\n      get Folder() {\n        return Folder;\n      },\n      get ArrowRight() {\n        return ArrowRight;\n      },\n      get PieChart() {\n        return PieChart;\n      },\n      get getFileList() {\n        return getFileList;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRouter","ElMessage","Document","FolderOpened","User","DataLine","Upload","Refresh","Download","Delete","Folder","ArrowRight","PieChart","getFileList","useAuthStore","router","authStore","loading","userStats","totalFiles","totalFolders","usedStorage","storageLimit","recentActivities","recentFiles","user","currentDate","Date","toLocaleDateString","year","month","day","weekday","storagePercentage","value","Math","round","formatStorage","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","formatFileSize","formatTime","time","date","now","diff","loadUserStats","response","files","length","filter","f","isDirectory","reduce","sum","file","size","quotaLimit","sort","a","b","createTime","slice","map","id","type","title","originalFilename","name","error","refreshActivities","goToUpload","push","goToFiles","goToProfile","downloadFile","downloadFileApi","blob","Blob","data","url","window","URL","createObjectURL","document","createElement","href","download","body","appendChild","click","revokeObjectURL","removeChild"],"sources":["/workspace/frontend/src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <!-- 欢迎区域 -->\n    <div class=\"welcome-section\">\n      <h1>欢迎回来，{{ user?.displayName || user?.username || '用户' }}</h1>\n      <p>今天是 {{ currentDate }}，祝您工作愉快！</p>\n    </div>\n\n    <!-- 统计卡片 -->\n    <el-row :gutter=\"20\" class=\"stats-row\">\n      <el-col :span=\"6\">\n        <el-card class=\"stat-card\" :loading=\"loading\">\n          <div class=\"stat-icon\">\n            <el-icon><Document /></el-icon>\n          </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-number\">{{ userStats.totalFiles || 0 }}</div>\n            <div class=\"stat-label\">我的文件</div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"stat-card\" :loading=\"loading\">\n          <div class=\"stat-icon\">\n            <el-icon><FolderOpened /></el-icon>\n          </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-number\">{{ userStats.totalFolders || 0 }}</div>\n            <div class=\"stat-label\">我的文件夹</div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"stat-card\" :loading=\"loading\">\n          <div class=\"stat-icon\">\n            <el-icon><DataLine /></el-icon>\n          </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-number\">{{ formatStorage(userStats.usedStorage || 0) }}</div>\n            <div class=\"stat-label\">已用存储</div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"stat-card\" :loading=\"loading\">\n          <div class=\"stat-icon\">\n            <el-icon><PieChart /></el-icon>\n          </div>\n          <div class=\"stat-info\">\n            <div class=\"stat-number\">{{ storagePercentage }}%</div>\n            <div class=\"stat-label\">存储使用率</div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 快速操作和最近活动 -->\n    <el-row :gutter=\"20\" class=\"content-row\">\n      <el-col :span=\"12\">\n        <el-card class=\"quick-actions-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>快速操作</span>\n            </div>\n          </template>\n          <div class=\"quick-actions\">\n            <el-button type=\"primary\" @click=\"goToUpload\" size=\"large\">\n              <el-icon><Upload /></el-icon>\n              上传文件\n            </el-button>\n            <el-button type=\"success\" @click=\"goToFiles\" size=\"large\">\n              <el-icon><Document /></el-icon>\n              管理文件\n            </el-button>\n            <el-button @click=\"goToProfile\" size=\"large\">\n              <el-icon><User /></el-icon>\n              个人中心\n            </el-button>\n          </div>\n          \n          <!-- 存储使用情况 -->\n          <div class=\"storage-info\">\n            <div class=\"storage-header\">\n              <span>存储使用情况</span>\n              <span>{{ formatStorage(userStats.usedStorage || 0) }} / {{ formatStorage(userStats.storageLimit || 1024 * 1024 * 1024) }}</span>\n            </div>\n            <el-progress \n              :percentage=\"storagePercentage\" \n              :color=\"storagePercentage > 80 ? '#f56c6c' : '#409eff'\"\n              :stroke-width=\"8\"\n            />\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"12\">\n        <el-card class=\"recent-activity-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>最近活动</span>\n              <el-button @click=\"refreshActivities\" :loading=\"loading\" text>\n                <el-icon><Refresh /></el-icon>\n              </el-button>\n            </div>\n          </template>\n          <div class=\"recent-activity\">\n            <div v-if=\"recentActivities.length === 0\" class=\"empty-activity\">\n              <el-icon><Document /></el-icon>\n              <p>暂无活动记录</p>\n            </div>\n            <div v-else v-for=\"activity in recentActivities\" :key=\"activity.id\" class=\"activity-item\">\n              <div class=\"activity-icon\">\n                <el-icon>\n                  <Document v-if=\"activity.type === 'upload'\" />\n                  <Download v-else-if=\"activity.type === 'download'\" />\n                  <Delete v-else-if=\"activity.type === 'delete'\" />\n                  <Folder v-else />\n                </el-icon>\n              </div>\n              <div class=\"activity-content\">\n                <div class=\"activity-title\">{{ activity.title }}</div>\n                <div class=\"activity-time\">{{ formatTime(activity.time) }}</div>\n              </div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 最近文件 -->\n    <el-row :gutter=\"20\" class=\"files-row\">\n      <el-col :span=\"24\">\n        <el-card class=\"recent-files-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>最近文件</span>\n              <el-button @click=\"goToFiles\" type=\"primary\" text>\n                查看全部\n                <el-icon><ArrowRight /></el-icon>\n              </el-button>\n            </div>\n          </template>\n          <div class=\"recent-files\">\n            <div v-if=\"recentFiles.length === 0\" class=\"empty-files\">\n              <el-icon><Document /></el-icon>\n              <p>暂无文件</p>\n              <el-button type=\"primary\" @click=\"goToUpload\">\n                <el-icon><Upload /></el-icon>\n                上传第一个文件\n              </el-button>\n            </div>\n            <div v-else class=\"file-grid\">\n              <div v-for=\"file in recentFiles\" :key=\"file.id\" class=\"file-item\" @click=\"downloadFile(file)\">\n                <div class=\"file-icon\">\n                  <el-icon>\n                    <Document v-if=\"!file.isDirectory\" />\n                    <Folder v-else />\n                  </el-icon>\n                </div>\n                <div class=\"file-name\">{{ file.originalFilename || file.name }}</div>\n                <div class=\"file-size\">{{ formatFileSize(file.size) }}</div>\n                <div class=\"file-time\">{{ formatTime(file.createTime) }}</div>\n              </div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { \n  Document, FolderOpened, User, DataLine, Upload, Refresh, \n  Download, Delete, Folder, ArrowRight, PieChart\n} from '@element-plus/icons-vue'\nimport { getFileList } from '@/api/file'\nimport { useAuthStore } from '@/store/auth'\n\nconst router = useRouter()\nconst authStore = useAuthStore()\n\nconst loading = ref(false)\nconst userStats = ref({\n  totalFiles: 0,\n  totalFolders: 0,\n  usedStorage: 0,\n  storageLimit: 1024 * 1024 * 1024 // 1GB\n})\nconst recentActivities = ref([])\nconst recentFiles = ref([])\n\nconst user = computed(() => authStore.user)\nconst currentDate = computed(() => new Date().toLocaleDateString('zh-CN', {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  weekday: 'long'\n}))\n\nconst storagePercentage = computed(() => {\n  if (!userStats.value.storageLimit) return 0\n  return Math.round((userStats.value.usedStorage / userStats.value.storageLimit) * 100)\n})\n\n// 格式化存储大小\nconst formatStorage = (bytes) => {\n  if (!bytes) return '0 B'\n  const k = 1024\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n// 格式化文件大小\nconst formatFileSize = (bytes) => {\n  if (!bytes) return '0 B'\n  const k = 1024\n  const sizes = ['B', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n// 格式化时间\nconst formatTime = (time) => {\n  if (!time) return ''\n  const date = new Date(time)\n  const now = new Date()\n  const diff = now - date\n  \n  if (diff < 60000) return '刚刚'\n  if (diff < 3600000) return Math.floor(diff / 60000) + '分钟前'\n  if (diff < 86400000) return Math.floor(diff / 3600000) + '小时前'\n  if (diff < 604800000) return Math.floor(diff / 86400000) + '天前'\n  \n  return date.toLocaleDateString()\n}\n\n// 加载用户统计信息\nconst loadUserStats = async () => {\n  loading.value = true\n  try {\n    const response = await getFileList()\n    const files = response || []\n    \n    userStats.value = {\n      totalFiles: files.length,\n      totalFolders: files.filter(f => f.isDirectory).length,\n      usedStorage: files.reduce((sum, file) => sum + (file.size || 0), 0),\n      storageLimit: user.value?.quotaLimit || 1024 * 1024 * 1024\n    }\n    \n    // 更新最近文件\n    recentFiles.value = files\n      .filter(f => !f.isDirectory)\n      .sort((a, b) => new Date(b.createTime) - new Date(a.createTime))\n      .slice(0, 8)\n    \n    // 生成最近活动\n    recentActivities.value = files\n      .sort((a, b) => new Date(b.createTime) - new Date(a.createTime))\n      .slice(0, 5)\n      .map(file => ({\n        id: file.id,\n        type: 'upload',\n        title: `上传了文件 \"${file.originalFilename || file.name}\"`,\n        time: file.createTime\n      }))\n    \n  } catch (error) {\n    ElMessage.error('加载统计信息失败')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 刷新活动记录\nconst refreshActivities = () => {\n  loadUserStats()\n}\n\n// 页面跳转\nconst goToUpload = () => {\n  router.push('/files')\n}\n\nconst goToFiles = () => {\n  router.push('/files')\n}\n\nconst goToProfile = () => {\n  router.push('/profile')\n}\n\n// 下载文件\nconst downloadFile = async (file) => {\n  try {\n    const { downloadFile: downloadFileApi } = await import('@/api/file')\n    const response = await downloadFileApi(file.id)\n    const blob = new Blob([response.data])\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = file.originalFilename || file.name\n    document.body.appendChild(a)\n    a.click()\n    window.URL.revokeObjectURL(url)\n    document.body.removeChild(a)\n  } catch (error) {\n    ElMessage.error('文件下载失败')\n  }\n}\n\nonMounted(() => {\n  loadUserStats()\n})\n</script>\n\n<style scoped>\n.home-container {\n  padding: 20px;\n}\n\n.stat-card {\n  text-align: center;\n  padding: 20px;\n}\n\n.stat-icon {\n  font-size: 48px;\n  color: #409EFF;\n  margin-bottom: 10px;\n}\n\n.stat-number {\n  font-size: 32px;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 5px;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #666;\n}\n\n.mt-20 {\n  margin-top: 20px;\n}\n\n.quick-actions {\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.activity-item {\n  padding: 10px 0;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.activity-item:last-child {\n  border-bottom: none;\n}\n\n.activity-title {\n  font-size: 14px;\n  color: #333;\n  margin-bottom: 5px;\n}\n\n.activity-time {\n  font-size: 12px;\n  color: #999;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import request from \"@/utils/request\";\nexport function getFileList(params) {\n  return request({\n    url: \"/files/list\",\n    method: \"get\",\n    params\n  });\n}\nexport function uploadFile(data, onUploadProgress) {\n  return request({\n    url: \"/files/upload\",\n    method: \"post\",\n    data,\n    onUploadProgress,\n    timeout: 300000\n  });\n}\nexport function downloadFile(id) {\n  return request({\n    url: `/files/download/${id}`,\n    method: \"get\",\n    responseType: \"blob\"\n  });\n}\nexport function deleteFile(id) {\n  return request({\n    url: `/files/${id}`,\n    method: \"delete\"\n  });\n}\nexport function renameFile(id, name) {\n  return request({\n    url: `/files/${id}/rename`,\n    method: \"put\",\n    data: {\n      name\n    }\n  });\n}\nexport function moveFile(id, folderId) {\n  return request({\n    url: `/files/${id}/move`,\n    method: \"post\",\n    data: {\n      folderId\n    }\n  });\n}\nexport function copyFile(id, folderId) {\n  return request({\n    url: `/files/${id}/copy`,\n    method: \"post\",\n    data: {\n      folderId\n    }\n  });\n}\nexport function searchFiles(keyword) {\n  return request({\n    url: \"/files/search\",\n    method: \"get\",\n    params: {\n      keyword\n    }\n  });\n}\nexport function getFileThumbnail(id) {\n  return request({\n    url: `/files/thumbnail/${id}`,\n    method: \"get\",\n    responseType: \"blob\"\n  });\n}\nexport function getRecycleBinFiles() {\n  return request({\n    url: \"/files/recycle/bin\",\n    method: \"get\"\n  });\n}\nexport function restoreFile(id) {\n  return request({\n    url: `/files/${id}/restore`,\n    method: \"put\"\n  });\n}\nexport function permanentDeleteFile(id) {\n  return request({\n    url: `/files/recycle/bin/${id}`,\n    method: \"delete\"\n  });\n}\nexport function emptyRecycleBin() {\n  return request({\n    url: \"/files/recycle/bin/empty\",\n    method: \"delete\"\n  });\n}","map":{"version":3,"names":["request","getFileList","params","url","method","uploadFile","data","onUploadProgress","timeout","downloadFile","id","responseType","deleteFile","renameFile","name","moveFile","folderId","copyFile","searchFiles","keyword","getFileThumbnail","getRecycleBinFiles","restoreFile","permanentDeleteFile","emptyRecycleBin"],"sources":["/workspace/frontend/src/api/file.js"],"sourcesContent":["import request from \"@/utils/request\"\n\nexport function getFileList(params) {\n  return request({\n    url: \"/files/list\",\n    method: \"get\",\n    params\n  })\n}\n\nexport function uploadFile(data, onUploadProgress) {\n  return request({\n    url: \"/files/upload\",\n    method: \"post\",\n    data,\n    onUploadProgress,\n    timeout: 300000\n  })\n}\n\nexport function downloadFile(id) {\n  return request({\n    url: `/files/download/${id}`,\n    method: \"get\",\n    responseType: \"blob\"\n  })\n}\n\nexport function deleteFile(id) {\n  return request({\n    url: `/files/${id}`,\n    method: \"delete\"\n  })\n}\n\nexport function renameFile(id, name) {\n  return request({\n    url: `/files/${id}/rename`,\n    method: \"put\",\n    data: { name }\n  })\n}\n\nexport function moveFile(id, folderId) {\n  return request({\n    url: `/files/${id}/move`,\n    method: \"post\",\n    data: { folderId }\n  })\n}\n\nexport function copyFile(id, folderId) {\n  return request({\n    url: `/files/${id}/copy`,\n    method: \"post\",\n    data: { folderId }\n  })\n}\n\nexport function searchFiles(keyword) {\n  return request({\n    url: \"/files/search\",\n    method: \"get\",\n    params: { keyword }\n  })\n}\n\nexport function getFileThumbnail(id) {\n  return request({\n    url: `/files/thumbnail/${id}`,\n    method: \"get\",\n    responseType: \"blob\"\n  })\n}\n\nexport function getRecycleBinFiles() {\n  return request({\n    url: \"/files/recycle/bin\",\n    method: \"get\"\n  })\n}\n\nexport function restoreFile(id) {\n  return request({\n    url: `/files/${id}/restore`,\n    method: \"put\"\n  })\n}\n\nexport function permanentDeleteFile(id) {\n  return request({\n    url: `/files/recycle/bin/${id}`,\n    method: \"delete\"\n  })\n}\n\nexport function emptyRecycleBin() {\n  return request({\n    url: \"/files/recycle/bin/empty\",\n    method: \"delete\"\n  })\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,iBAAiB;AAErC,OAAO,SAASC,WAAWA,CAACC,MAAM,EAAE;EAClC,OAAOF,OAAO,CAAC;IACbG,GAAG,EAAE,aAAa;IAClBC,MAAM,EAAE,KAAK;IACbF;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,SAASG,UAAUA,CAACC,IAAI,EAAEC,gBAAgB,EAAE;EACjD,OAAOP,OAAO,CAAC;IACbG,GAAG,EAAE,eAAe;IACpBC,MAAM,EAAE,MAAM;IACdE,IAAI;IACJC,gBAAgB;IAChBC,OAAO,EAAE;EACX,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,YAAYA,CAACC,EAAE,EAAE;EAC/B,OAAOV,OAAO,CAAC;IACbG,GAAG,EAAE,mBAAmBO,EAAE,EAAE;IAC5BN,MAAM,EAAE,KAAK;IACbO,YAAY,EAAE;EAChB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,UAAUA,CAACF,EAAE,EAAE;EAC7B,OAAOV,OAAO,CAAC;IACbG,GAAG,EAAE,UAAUO,EAAE,EAAE;IACnBN,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;AAEA,OAAO,SAASS,UAAUA,CAACH,EAAE,EAAEI,IAAI,EAAE;EACnC,OAAOd,OAAO,CAAC;IACbG,GAAG,EAAE,UAAUO,EAAE,SAAS;IAC1BN,MAAM,EAAE,KAAK;IACbE,IAAI,EAAE;MAAEQ;IAAK;EACf,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,QAAQA,CAACL,EAAE,EAAEM,QAAQ,EAAE;EACrC,OAAOhB,OAAO,CAAC;IACbG,GAAG,EAAE,UAAUO,EAAE,OAAO;IACxBN,MAAM,EAAE,MAAM;IACdE,IAAI,EAAE;MAAEU;IAAS;EACnB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,QAAQA,CAACP,EAAE,EAAEM,QAAQ,EAAE;EACrC,OAAOhB,OAAO,CAAC;IACbG,GAAG,EAAE,UAAUO,EAAE,OAAO;IACxBN,MAAM,EAAE,MAAM;IACdE,IAAI,EAAE;MAAEU;IAAS;EACnB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASE,WAAWA,CAACC,OAAO,EAAE;EACnC,OAAOnB,OAAO,CAAC;IACbG,GAAG,EAAE,eAAe;IACpBC,MAAM,EAAE,KAAK;IACbF,MAAM,EAAE;MAAEiB;IAAQ;EACpB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,gBAAgBA,CAACV,EAAE,EAAE;EACnC,OAAOV,OAAO,CAAC;IACbG,GAAG,EAAE,oBAAoBO,EAAE,EAAE;IAC7BN,MAAM,EAAE,KAAK;IACbO,YAAY,EAAE;EAChB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASU,kBAAkBA,CAAA,EAAG;EACnC,OAAOrB,OAAO,CAAC;IACbG,GAAG,EAAE,oBAAoB;IACzBC,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;AAEA,OAAO,SAASkB,WAAWA,CAACZ,EAAE,EAAE;EAC9B,OAAOV,OAAO,CAAC;IACbG,GAAG,EAAE,UAAUO,EAAE,UAAU;IAC3BN,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;AAEA,OAAO,SAASmB,mBAAmBA,CAACb,EAAE,EAAE;EACtC,OAAOV,OAAO,CAAC;IACbG,GAAG,EAAE,sBAAsBO,EAAE,EAAE;IAC/BN,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;AAEA,OAAO,SAASoB,eAAeA,CAAA,EAAG;EAChC,OAAOxB,OAAO,CAAC;IACbG,GAAG,EAAE,0BAA0B;IAC/BC,MAAM,EAAE;EACV,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}